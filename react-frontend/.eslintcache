[{"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/index.js":"1","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/App.js":"2","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/reportWebVitals.js":"3","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Context.js":"4","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Home/Home.js":"5","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Login/Login.js":"6","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostCreate.js":"7","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostList.js":"8","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostUpdate.js":"9","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostForm.js":"10","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostDetail.js":"11","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostDelete.js":"12","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Navigation/Navigation.js":"13","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Logout.js":"14","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Signup/Signup.js":"15","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchBar.js":"16","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResult.js":"17","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetail.js":"18","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserNav.js":"19","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPost.js":"20","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAbout.js":"21","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriend.js":"22","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/NewsFeed/NewsFeed.js":"23","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/NewsFeed/PostDetail.js":"24","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriendCard.js":"25","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResultCard.js":"26","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyFriends/MyFriends.js":"27","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyFriends/MyFriendsCard.js":"28","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Hamburger/Hamburger.js":"29","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPostCard.js":"30","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/CommentCard/CommentCard.js":"31","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/NewsFeed/NewsFeedCard.js":"32","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikes.js":"33","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikesCard.js":"34","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentCreate.js":"35","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentUpdate.js":"36","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentForm.js":"37","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentDelete.js":"38","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAboutCard.js":"39","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/Chat.js":"40","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatCard.js":"41","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatMap.js":"42","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetailFriendBtn.js":"43","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetailFriendBtnCard.js":"44","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatList.js":"45","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatListCard.js":"46","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/WelcomeMsg/WelcomeMsg.js":"47"},{"size":699,"mtime":1612519394710,"results":"48","hashOfConfig":"49"},{"size":454,"mtime":1613397294189,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1612278983569,"results":"51","hashOfConfig":"49"},{"size":5999,"mtime":1614096503220,"results":"52","hashOfConfig":"49"},{"size":6462,"mtime":1614182662062,"results":"53","hashOfConfig":"49"},{"size":3612,"mtime":1614154141266,"results":"54","hashOfConfig":"49"},{"size":1351,"mtime":1613159113321,"results":"55","hashOfConfig":"49"},{"size":1604,"mtime":1613414963240,"results":"56","hashOfConfig":"49"},{"size":1888,"mtime":1612903407865,"results":"57","hashOfConfig":"49"},{"size":4119,"mtime":1614177258939,"results":"58","hashOfConfig":"49"},{"size":1953,"mtime":1612581837337,"results":"59","hashOfConfig":"49"},{"size":2218,"mtime":1613414866648,"results":"60","hashOfConfig":"49"},{"size":932,"mtime":1614180434655,"results":"61","hashOfConfig":"49"},{"size":427,"mtime":1614183462472,"results":"62","hashOfConfig":"49"},{"size":3996,"mtime":1614171429601,"results":"63","hashOfConfig":"49"},{"size":1073,"mtime":1614178126222,"results":"64","hashOfConfig":"49"},{"size":3027,"mtime":1614195411023,"results":"65","hashOfConfig":"49"},{"size":3253,"mtime":1613729905403,"results":"66","hashOfConfig":"49"},{"size":517,"mtime":1613164196496,"results":"67","hashOfConfig":"49"},{"size":10471,"mtime":1614198410684,"results":"68","hashOfConfig":"49"},{"size":3636,"mtime":1613691601076,"results":"69","hashOfConfig":"49"},{"size":4661,"mtime":1614195419933,"results":"70","hashOfConfig":"49"},{"size":2064,"mtime":1613414901861,"results":"71","hashOfConfig":"49"},{"size":1395,"mtime":1613414886034,"results":"72","hashOfConfig":"49"},{"size":4965,"mtime":1614194913702,"results":"73","hashOfConfig":"49"},{"size":3759,"mtime":1614190135542,"results":"74","hashOfConfig":"49"},{"size":2994,"mtime":1613297288767,"results":"75","hashOfConfig":"49"},{"size":2432,"mtime":1613248273097,"results":"76","hashOfConfig":"49"},{"size":1183,"mtime":1614170301372,"results":"77","hashOfConfig":"49"},{"size":10328,"mtime":1614201279897,"results":"78","hashOfConfig":"49"},{"size":4182,"mtime":1614155944600,"results":"79","hashOfConfig":"49"},{"size":1344,"mtime":1613178472907,"results":"80","hashOfConfig":"49"},{"size":3026,"mtime":1614198969393,"results":"81","hashOfConfig":"49"},{"size":2334,"mtime":1614199617481,"results":"82","hashOfConfig":"49"},{"size":564,"mtime":1614109899778,"results":"83","hashOfConfig":"49"},{"size":889,"mtime":1613308954839,"results":"84","hashOfConfig":"49"},{"size":2976,"mtime":1614201012827,"results":"85","hashOfConfig":"49"},{"size":2673,"mtime":1613414365441,"results":"86","hashOfConfig":"49"},{"size":7790,"mtime":1614202787148,"results":"87","hashOfConfig":"49"},{"size":5382,"mtime":1614184863434,"results":"88","hashOfConfig":"49"},{"size":5609,"mtime":1614185366627,"results":"89","hashOfConfig":"49"},{"size":1591,"mtime":1614040836434,"results":"90","hashOfConfig":"49"},{"size":3398,"mtime":1613738939160,"results":"91","hashOfConfig":"49"},{"size":1368,"mtime":1613738891324,"results":"92","hashOfConfig":"49"},{"size":5009,"mtime":1614184773947,"results":"93","hashOfConfig":"49"},{"size":2153,"mtime":1614173482477,"results":"94","hashOfConfig":"49"},{"size":447,"mtime":1614182662130,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1ldhon5",{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"98"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"98"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"98"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"98"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"98"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/index.js",[],["225","226"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/App.js",["227","228","229"],"import \"./App.css\";\nimport Home from \"../src/Components/Home/Home\";\nimport { useContext } from \"react\";\nimport { OdinBookContext } from \"./Components/Context\";\nimport Login from \"./Components/Login/Login\";\n\nfunction App() {\n  // const { jwtData } = useContext(OdinBookContext);\n  // console.log(jwtData);\n\n  // const jwtData = JSON.parse(localStorage.getItem());\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/reportWebVitals.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Context.js",["230","231","232","233","234","235"],"import axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport async from \"async\";\n// import { response } from \"express\";\nimport { Switch, useLocation } from \"react-router-dom\";\nimport socketIOClient from \"socket.io-client\";\nimport { query } from \"express-validator\";\nconst ENDPOINT = \"http://localhost:3000\";\n\n// require(\"dotenv\").config();\n\nconst OdinBookContext = createContext();\n\nconst OdinBookProvider = ({ children }) => {\n  // console.log(process.env.REACT_APP_API_KEY);\n  // ex. http://localhost:3000/odinbook\n  // const [serverUrl] = useState(\"http://localhost:3000/odinbook\");\n\n  //to render the searchresult page if the user hits enter\n  const [searchValueChange, setSearchValueChange] = useState(false);\n\n  //to prefill the search bar if there is a value in the url\n  const [searchBarState, setSearchBarState] = useState({ search: \"\" });\n\n  //for MyFriends to not re-render\n  const [myFriends, setMyFriends] = useState([]);\n  const [didMyFriendsMount, setDidMyFriendsMount] = useState(true);\n\n  //for myabout to not re-render\n  const [myAbout, setMyAbout] = useState({});\n  const [didMyAboutMount, setdidMyAboutMount] = useState(true);\n\n  //for mypost to not re-render\n  const [myPosts, setMyposts] = useState([]);\n  const [didMyPostsMount, setDidMyPostsMount] = useState(true);\n\n  //for mynewsfeed to not re-render\n  const [myNewsfeed, setMyNewsFeed] = useState([]);\n  const [didMyNewsFeedMount, setDidMyNewsFeedMount] = useState(true);\n\n  //for chatlist\n  const [myChatList, setMyChatList] = useState([]);\n  const [isRead, setIsRead] = useState([]);\n  const [didMyChatListMount, setDidMyChatListMount] = useState(true);\n\n  const [loading, setLoading] = useState(true);\n\n  const [isAuth, setIsAuth] = useState(false);\n\n  // let jwt = JSON.parse(localStorage.getItem(\"jwtData\"));\n  const [jwtData, setJwtData] = useState(\n    JSON.parse(localStorage.getItem(\"jwtData\"))\n  );\n\n  let serverUrl = \"http://localhost:3000/odinbook\";\n\n  const axios_request = async ({\n    route,\n    data,\n    method,\n    axios_error,\n    axios_response,\n  }) => {\n    // console.log(\"hello\");\n    // const serverUrl = process.env.serverUrl;\n\n    // console.log(jwtData);\n    if (jwtData !== null || route === \"/login\" || route === \"/signup\") {\n      // console.log(\"helllo\");\n      try {\n        let token;\n        let headers;\n        if (route !== \"/login\" && route !== \"/signup\") {\n          token = jwtData.token;\n          headers = { authorization: `Bearer ${token}` };\n        }\n\n        // console.log(data);\n        // console.log(method);\n        // console.log(route);\n        const response_data = await axios({\n          url: `${serverUrl}${route}`,\n          method: method,\n          headers: headers || \"\",\n          data: data,\n        });\n        // console.log(jwtData);\n\n        if (route === \"/login\" || route === \"/signup\") {\n          localStorage.setItem(\n            \"jwtData\",\n            JSON.stringify(response_data.data.jwtData)\n          );\n          setJwtData(response_data.data.jwtData);\n        }\n        setIsAuth(true);\n        console.log(\"Utils Response=\", response_data);\n        axios_response(response_data);\n      } catch (err) {\n        if (err.response) {\n          console.log(\"Utils Error\", err.response.data);\n          if (err.response.status === 403) {\n            setIsAuth(false);\n          }\n        } else {\n          console.log(\"Utils Error\", err.message);\n        }\n        axios_error(err);\n      }\n    } else {\n      console.log(\"Utils Error= NO JWT TOKEN\");\n      setIsAuth(false);\n    }\n  };\n\n  const [socket, setSocket] = useState(\"\");\n\n  let headers;\n  const isLogin = async () => {\n    const route = \"/isUserAuth\";\n    const method = \"GET\";\n    // console.log(process.env.REACT_APP_API_KEY);\n\n    if (jwtData) {\n      try {\n        const token = jwtData.token;\n        headers = { authorization: `Bearer ${token}` };\n        console.log(headers);\n\n        const response = await axios({\n          url: `${serverUrl}${route}`,\n          method: method,\n          data: token,\n          headers: headers,\n        });\n\n        console.log(\"response from context login\", response);\n        setIsAuth(true);\n        setLoading(false);\n      } catch (err) {\n        console.log(\"error from context login\", err);\n        setLoading(false);\n        if (err.response) {\n          if (err.response.status == 403) {\n            setIsAuth(false);\n          }\n        }\n      }\n    } else {\n      setIsAuth(false);\n      setLoading(false);\n      console.log(\"context login no jwt token\");\n    }\n  };\n  useEffect(() => {\n    isLogin();\n\n    const socket12 = socketIOClient(ENDPOINT, {\n      withCredentials: true,\n    });\n\n    setSocket(socket12);\n    console.log(loading);\n    if (jwtData) {\n      socket12.emit(\"join\", jwtData.user);\n    }\n  }, []);\n\n  return (\n    <OdinBookContext.Provider\n      value={{\n        searchValue: [searchValueChange, setSearchValueChange],\n        searchBarStateValue: [searchBarState, setSearchBarState],\n        jwtData: jwtData,\n\n        myFriendsValue: [myFriends, setMyFriends],\n        didMyFriendsMountValue: [didMyFriendsMount, setDidMyFriendsMount],\n\n        myAboutValue: [myAbout, setMyAbout],\n\n        myPostsValue: [myPosts, setMyposts],\n        didMyPostsMountValue: [didMyPostsMount, setDidMyPostsMount],\n\n        myNewsFeedValue: [myNewsfeed, setMyNewsFeed],\n        didMyNewsFeedMountValue: [didMyNewsFeedMount, setDidMyNewsFeedMount],\n\n        didMyAboutMountValue: [didMyAboutMount, setdidMyAboutMount],\n\n        isAuthValue: [isAuth, setIsAuth],\n\n        socket: socket,\n\n        axios_request: axios_request,\n\n        myChatListValue: [myChatList, setMyChatList],\n        isReadValue: [isRead, setIsRead],\n        didMyChatListMountValue: [didMyChatListMount, setDidMyChatListMount],\n      }}\n    >\n      {!loading ? children : <div className=\"loading\">loading context....</div>}\n    </OdinBookContext.Provider>\n  );\n};\n\nexport { OdinBookContext, OdinBookProvider };\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Home/Home.js",["236","237","238","239","240","241","242","243","244","245","246","247"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport MyPostUpdate from \"../MyPosts/MyPostUpdate\";\nimport MyPostList from \"../MyPosts/MyPostList\";\nimport MyPostCreate from \"../MyPosts/MyPostCreate\";\n// import MyPostDetail from \"../MyPosts/MyPostDetail\";\nimport MyPostDelete from \"../MyPosts/MyPostDelete\";\nimport NewsFeed from \"../NewsFeed/NewsFeed\";\nimport PostDetail from \"../NewsFeed/PostDetail\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Login from \"../Login/Login\";\nimport Logout from \"../Logout\";\nimport Signup from \"../Signup/Signup\";\nimport \"./Home.css\";\nimport SearchBar from \"../Search/SearchBar\";\nimport SearchResult from \"../Search/SearchResult\";\nimport UserDetail from \"../UserDetail/UserDetail\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport MyFriends from \"../MyFriends/MyFriends\";\n// import { OdinBookContext } from \"../Context\";\nimport UserPost from \"../UserDetail/UserPost\";\nimport UserFriend from \"../UserDetail/UserFriend\";\nimport { OdinBookContext } from \"../Context\";\nimport Chat from \"../Chat/Chat\";\nimport ChatList from \"../ChatList/ChatList\";\nimport WelcomeMsg from \"../WelcomeMsg/WelcomeMsg\";\n\nconst Home = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  const [isClick, setIsclick] = useState(false);\n\n  const { isAuthValue, jwtData } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n  // console.log(isAuth);\n\n  const history = useHistory();\n  // console.log(history);\n\n  // console.log(location.pathname);\n\n  console.log(location);\n  const path = location.pathname;\n\n  const ref_isClick = useRef();\n\n  if (ref_isClick.current) {\n    console.log(ref_isClick.current);\n  }\n\n  console.log(path);\n  useEffect(() => {\n    const x = window;\n    x.addEventListener(\"click\", (e) => {\n      //maybe if something goes wrong ..putting this in a try,catch block\n      try {\n        e.stopPropagation();\n        e.preventDefault();\n        let arr = e.target.classList;\n\n        for (let i = 0; i < arr.length; i++) {\n          let element = document.querySelector(`.${arr[i]}`);\n\n          // doing this 'if(element==null)' so if the form-btn is clicked cancel this function shouldn't be affected.\n          //since the form-btn will be null when it is closed, so to prevent the error\n          if (element == null) {\n            return;\n          }\n\n          let p = element.classList;\n          if (\n            p[i].toString() !== \"drop-btn\" &&\n            p[i] !== null &&\n            p[i] !== \"ham-icon\" &&\n            p[i] !== \"close-icon\"\n          ) {\n            setIsclick(false);\n          }\n          arr = [];\n        }\n\n        arr = [];\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }, []);\n\n  console.log(path);\n  return (\n    <div className=\"Home\">\n      {!isAuth && <div className=\"odin-book\">OdinBook</div>}\n      {!isAuth &&\n        (path === \"/signup\" ? (\n          <Redirect to=\"/signup\" />\n        ) : (\n          <Redirect to=\"/login\" />\n        ))}\n\n      {/* {isAuth && (path === \"/login\" || path === \"/signup\") && <WelcomeMsg />} */}\n\n      {/* {!isAuth && path === \"/login\"} */}\n      {isAuth && (path === \"/login\" || path === \"/signup\") && (\n        <Redirect to={{ pathname: \"/\", state: { from: path } }} />\n      )}\n\n      {isAuth && (\n        <>\n          <div className=\"Navigation\">\n            {/* <div className=\"nav-bar-title\">Odinbook</div> */}\n            {/* width 68% */}\n            <SearchBar />\n            <div className=\"left-nav\">\n              <Navigation to=\"/\" label=\"fas fa-home\" />\n              <Navigation to=\"/friends\" label=\"fas fa-user-friends\" />\n\n              {/* mychat will show the list of conversations */}\n              {/*for now keeping chat list aside */}\n              <Navigation to=\"/mychat\" label=\"fab fa-facebook-messenger\" />\n\n              {/* width 32% */}\n              <div\n                style={{\n                  color: isClick ? \"red\" : \"\",\n                }}\n                className=\"drop-btn \"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsclick(!isClick);\n                }}\n                ref={ref_isClick}\n              >\n                {isClick ? (\n                  <div className=\"close-icon fas fa-times-circle\"></div>\n                ) : (\n                  <div className=\"ham-icon fa fa-caret-down\"></div>\n                )}\n              </div>\n            </div>\n          </div>\n          {isClick ? <Hamburger /> : \"\"}\n        </>\n      )}\n\n      <Switch location={background || location}>\n        {isAuth && (\n          <>\n            <Route exact path=\"/\">\n              <UserPost path=\"newsfeed\" />\n            </Route>\n            <Route exect path=\"/user/:username\">\n              <UserDetail />\n            </Route>\n            <Route path=\"/search/:name\">\n              <SearchResult />\n            </Route>\n            <Route path=\"/logout\">\n              <Logout />\n            </Route>\n            <Route exact path=\"/friends\">\n              <UserFriend path=\"myfriends\" />\n            </Route>\n            <Route path=\"/chat\">\n              <Chat />\n            </Route>\n            <Route path=\"/mychat\">\n              <ChatList />\n            </Route>\n          </>\n        )}\n\n        {!isAuth && (\n          <>\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n          </>\n        )}\n\n        {/* <Route path=\"/user/:username/:\">\n          <UserDetail />\n        </Route> */}\n        {/* <Route path=\"/myposts\">\n          <MyPostList />\n        </Route> */}\n        {/* <Route path=\"/update-post/:mypostid\">\n          <MyPostUpdate />\n        </Route> */}\n        {/* <Route exact path=\"/mypost/:mypostid\">\n          <MyPostDetail />\n        </Route> */}\n        {/* <Route path=\"/create-post\">\n          <MyPostCreate />\n        </Route> */}\n        {/* <Route path=\"/news-feed/:postid\">\n          <PostDetail />\n        </Route> */}\n\n        {/* <Route exact path=\"/account\">\n          my-Account\n        </Route> */}\n\n        {/* &&&&&& */}\n      </Switch>\n\n      {/* <Route path=\"/delete-post/mypost:id\">\n        <MyPostDelete />\n      </Route> */}\n    </div>\n  );\n};\n\nexport default Home;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Login/Login.js",["248","249","250","251"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const { axios_request, isAuthValue } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n  const [isloginClick, setIsLoginClick] = useState(false);\n\n  const refUsername = useRef();\n  const refPassword = useRef();\n  const [errors, setErrors] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [postLoading, setPostLoading] = useState(false);\n\n  const login_route = \"/login\";\n  const login_method = \"POST\";\n\n  const axios_login = async () => {\n    setPostLoading(true);\n\n    const cb_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n    };\n\n    axios_request({\n      route: login_route,\n      data: {\n        username: refUsername.current.value,\n        password: refPassword.current.value,\n      },\n      method: login_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  const history = useHistory();\n\n  // useEffect(() => {\n  //   if (isAuth == true) {\n  //     history.push(\"/\");\n  //   }\n  // }, [isAuth]);\n\n  return (\n    <div className=\"Login\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <form>\n          <div className=\"head\"> Login</div>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Enter your username\"\n              ref={refUsername}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"text\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              ref={refPassword}\n            />\n          </div>\n          {display_errors()}\n          <div className=\"buttons\">\n            <div className=\"login-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (postLoading) {\n                    return;\n                  } else if (\n                    refUsername.current.value === \"\" ||\n                    refPassword.current.value === \"\"\n                  ) {\n                    return;\n                  } else {\n                    return axios_login();\n                  }\n                }}\n              >\n                {postLoading ? \"Logging-in\" : \"Log-in\"}\n              </button>\n            </div>\n            <div\n              className=\"signup-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setIsLoginClick(true);\n              }}\n            >\n              <button>Sign-up</button>\n            </div>\n          </div>\n\n          {isloginClick && <Redirect to=\"/signup\" />}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostCreate.js",["252","253","254"],"import React, { useState } from \"react\";\nimport MyPostForm from \"./MyPostForm\";\nimport \"./MyPostCreate.css\";\nimport { useLocation } from \"react-router-dom\";\n\nconst MypostCreate = ({ user_post_response, createClick, setCreateClick }) => {\n  // const [formBtnClicked, setFormBtnClicked] = useState(false);\n\n  const mypost_create_route = \"/myposts\";\n  const mypost_create_method = \"POST\";\n\n  const location = useLocation();\n  const fname = location.state.fname;\n  const lname = location.state.lname;\n  const username = location.state.username;\n  return (\n    <div className=\"MyPostCreate\">\n      <>\n        <div className=\"show-form-container\">\n          <div className=\"profile-picture\">{[...fname[0].toLowerCase()]}</div>\n          <div\n            className=\"show-form-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              setCreateClick(true);\n            }}\n          >\n            What's on your mind..?\n          </div>\n        </div>\n        {createClick && (\n          <MyPostForm\n            route={mypost_create_route}\n            method={mypost_create_method}\n            formTitle=\"Create Post\"\n            user_post_response={user_post_response}\n            createClick={createClick}\n            setCreateClick={setCreateClick}\n          />\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default MypostCreate;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostList.js",["255"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\n\nconst MyPostList = () => {\n  const { axios_request } = useContext(OdinBookContext);\n  const [error, setError] = useState(\"\");\n\n  const [posts, setPosts] = useState([]);\n  const [getLoading, setGetLoading] = useState(true);\n\n  const mypost_list_route = \"/myposts\";\n  const mypost_list_method = \"GET\";\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  const make_server_request = () => {\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n    const cb_response = (response) => {\n      setPosts(response.data);\n      setGetLoading(false);\n    };\n    axios_request({\n      route: mypost_list_route,\n      data: \"\",\n      method: mypost_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const display_posts = () => {\n    const arr = [];\n\n    for (let i = 0; i < posts.length; i++) {\n      arr.push(\n        <div className=\"card\" key={uniqid()}>\n          <Link to={`/mypost/${posts[i]._id}`}>\n            <div className=\"title\">{posts[i].title}</div>\n            <div className=\"content_text\">{posts[i].content_text}</div>\n          </Link>\n        </div>\n      );\n    }\n    return arr;\n  };\n\n  return (\n    <div className=\"MyPostList\">\n      {getLoading && \"loading..\"}\n      {!getLoading && (\n        <>{error ? <div className=\"error\">{error}</div> : display_posts()}</>\n      )}\n    </div>\n  );\n};\n\nexport default MyPostList;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostUpdate.js",["256","257","258","259","260"],"import React, { useContext, useEffect, useState } from \"react\";\nimport MyPostForm from \"./MyPostForm\";\nimport { OdinBookContext } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\nconst MyPostUpdate = ({\n  postid,\n  updateClick,\n  setUpdateClick,\n  updateData,\n  user_post_response,\n}) => {\n  // const { axios_request } = useContext(OdinBookContext);\n  // const [post, setPost] = useState(\"\");\n  // const [error, setError] = useState(\"\");\n  // const [getLoading, setGetLoading] = useState(true);\n  // const [formBtnClicked, setFormBtnClicked] = useState(true);\n\n  // const params = useParams();\n\n  // const post_detail_route = `/post/${postid}`;\n  // const post_detail_method = \"GET\";\n\n  const mypost_update_route = `/mypost/${postid}`;\n  const mypost_update_method = \"PUT\";\n\n  // useEffect(() => {\n  //   make_server_request();\n  // }, []);\n\n  // const make_server_request = () => {\n  //   const cb_error = (err) => {\n  //     setError(err.message);\n  //     setGetLoading(false);\n  //   };\n  //   const cb_response = (response) => {\n  //     setPost(response.data);\n  //     setGetLoading(false);\n  //     console.log(\"update data\", updateData);\n  //     console.log(\"get request\", response);\n  //   };\n\n  //   axios_request({\n  //     route: post_detail_route,\n  //     data: post,\n  //     method: post_detail_method,\n  //     axios_error: cb_error,\n  //     axios_response: cb_response,\n  //   });\n  // };\n\n  // console.log(post);\n\n  return (\n    <div className=\"MyPostUpdate\">\n      {updateClick && (\n        <MyPostForm\n          route={mypost_update_route}\n          update_value={updateData}\n          method={mypost_update_method}\n          createClick={updateClick}\n          setCreateClick={setUpdateClick}\n          formTitle=\"Update Post\"\n          user_post_response={user_post_response}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MyPostUpdate;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostForm.js",["261","262"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport \"./MyPostForm.css\";\n\nconst MyPostForm = ({\n  route,\n  update_value,\n  method,\n  formTitle,\n  user_post_response,\n  createClick,\n  setCreateClick,\n  updateClick,\n  setUpdateClick,\n}) => {\n  const { axios_request } = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const history = useHistory();\n\n  const refTitle = useRef();\n  const refContenText = useRef();\n\n  console.log(refTitle);\n\n  useEffect(() => {\n    refTitle.current.value = update_value ? update_value.title : \"\";\n    refContenText.current.value = update_value ? update_value.content_text : \"\";\n  }, []);\n  console.log(update_value);\n\n  const submitHandler = () => {\n    setPostLoading(true);\n    const axios_error = (err) => {\n      if (err.response) {\n        console.log(err.response.data);\n        setErrors(err.response.data);\n      } else {\n        console.log(err.message);\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const axios_response = (response) => {\n      console.log(response);\n      setErrors([]);\n      setPostLoading(false);\n      user_post_response(response);\n      setCreateClick(false);\n      // setUpdateClick(false);\n    };\n\n    console.log(refTitle.current.value);\n    axios_request({\n      route: route,\n      data: {\n        title: refTitle.current.value,\n        content_text: refContenText.current.value,\n      },\n      method: method,\n      axios_error: axios_error,\n      axios_response: axios_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  const location = useLocation();\n  console.log(location.state);\n  const params = useParams();\n  console.log(params);\n\n  return (\n    <div className=\"MyPostForm\">\n      {error && (\n        <div className=\"error\">\n          <div>{error} </div>\n          <div>Please try refreshing the page</div>\n        </div>\n      )}\n      {!error && (\n        <div className=\"form-container\">\n          <div className=\"form-head\">\n            <div className=\"form-title\">{formTitle}</div>\n            <div\n              className=\"form-close-btn fas fa-times-circle\"\n              onClick={(e) => {\n                e.preventDefault();\n                setCreateClick(false);\n              }}\n            ></div>\n          </div>\n\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                placeholder=\"Enter your post title\"\n                name=\"title\"\n                ref={refTitle}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"content_text\">Text</label>\n              <textarea\n                type=\"text\"\n                id=\"content_text\"\n                name=\"content_text\"\n                placeholder=\"Add text\"\n                ref={refContenText}\n                // value={}\n              />\n            </div>\n            {display_errors()}\n            <div className=\"submit-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  //to prevent multiple clicks\n                  if (postLoading) {\n                    return;\n                  } else {\n                    submitHandler();\n                  }\n                }}\n              >\n                {!postLoading ? \"Submit\" : \"Submitting...\"}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default MyPostForm;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostDetail.js",["263"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\n\nconst MyPostDetail = () => {\n  const { axios_request } = useContext(OdinBookContext);\n\n  const params = useParams();\n  console.log(params);\n\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [post, setPost] = useState(\"\");\n\n  const post_detail_route = `/post/${params.mypostid}`;\n  const post_detail_method = `GET`;\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  const make_server_request = () => {\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPost(response.data);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: post_detail_route,\n      data: \"\",\n      method: post_detail_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  let location = useLocation();\n\n  const display_post = () => {\n    return (\n      <>\n        <div className=\"title\">{post.title}</div>\n        <div className=\"content_text\">{post.content_text}</div>\n        <div className=\"edit-btn\">\n          <Link to={`/update-post/${post._id}`}>\n            <button>Edit</button>\n          </Link>\n        </div>\n        <div className=\"delete-btn\">\n          <Link\n            replace\n            key={post._id}\n            to={{\n              pathname: `/delete-post/${post._id}`,\n              state: { background: location },\n            }}\n          >\n            <button>Delete</button>\n          </Link>\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"MyPostDetail\">\n      {getLoading && \"loading...\"}\n      {!getLoading && (\n        <>{error ? <div className=\"error\">{error}</div> : display_post()}</>\n      )}\n    </div>\n  );\n};\n\nexport default MyPostDetail;\n",["264","265"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostDelete.js",["266","267","268"],"import React, { useContext, useState } from \"react\";\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./MyPostDelete.css\";\n\nconst MyPostDelete = ({\n  deleteClick,\n  setDeleteClick,\n  user_delete_response,\n  postid,\n}) => {\n  console.log(postid);\n\n  const { axios_request } = useContext(OdinBookContext);\n  const mypost_delete_route = `/mypost/${postid}`;\n  const mypost_delete_method = \"DELETE\";\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const make_server_request = () => {\n    const cb_error = (err) => {\n      setError(err.message);\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n      // setDeleteClick(false);\n      user_delete_response(response);\n    };\n\n    axios_request({\n      route: mypost_delete_route,\n      data: \"\",\n      method: mypost_delete_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const deleteHandler = () => {\n    make_server_request();\n  };\n\n  return (\n    <div className=\"MyPostDelete\">\n      {error && (\n        <div className=\"error\">\n          <div>{error}</div>\n          <div>Please try refreshing the Page</div>\n        </div>\n      )}\n      {!error && (\n        <div className=\"dialog-box\">\n          <p className=\"confitm-msg\">Are you sure want to delete this post?</p>\n          <div className=\"btn\">\n            <button\n              className=\"dlt-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                if (!postLoading) {\n                  setPostLoading(true);\n                  deleteHandler();\n                } else {\n                  return;\n                }\n              }}\n            >\n              {!postLoading ? \"Delete\" : \"Deleting post....\"}\n            </button>\n\n            <button\n              className=\"cancel-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setDeleteClick(false);\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyPostDelete;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Navigation/Navigation.js",["269","270"],"import React from \"react\";\nimport {\n  useRouteMatch,\n  Link,\n  useLocation,\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ to, label }) => {\n  console.log(to);\n  console.log(label);\n  let match = useRouteMatch({ path: to });\n\n  if (match != null) {\n    match = match.isExact ? true : false;\n  } else {\n    match = false;\n  }\n\n  const location = useLocation();\n  console.log(location);\n\n  const params = useParams();\n  // console.log(params);\n  const history = useHistory();\n  // console.log(history);\n\n  const arr = location.pathname.split(\"/\");\n\n  const element = document.querySelector(\"#search\");\n\n  if (element) {\n    if (arr[1] !== \"search\") {\n      element.value = \"\";\n    }\n  }\n  return (\n    <div className={match ? \"active nav-links\" : \"nav-links\"}>\n      <Link to={to}>\n        <i className={label}></i>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navigation;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Logout.js",["271"],"import React, { useContext, useEffect } from \"react\";\nimport { OdinBookContext } from \"./Context\";\n\nconst Logout = () => {\n  const { isAuthValue } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n\n  useEffect(() => {\n    setIsAuth(false);\n  }, [isAuth]);\n\n  return (\n    <div className=\"Logout\">\n      {localStorage.clear()}\n\n      {window.location.reload()}\n    </div>\n  );\n};\n\nexport default Logout;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Signup/Signup.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchBar.js",["272","273","274","275","276","277"],"import { concatSeries } from \"async\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport { Link, Redirect, useHistory, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./SearchBar.css\";\n\nconst SearchBar = () => {\n  const { searchValue } = useContext(OdinBookContext);\n  const [searchValueChange, setSearchValueChange] = searchValue;\n\n  const history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(ref_name.current.value);\n    setSearchValueChange(true);\n    if (ref_name.current.value === \"\") {\n      return;\n    } else {\n      console.log(ref_name.current.value);\n      return history.push(`/search/${ref_name.current.value}`);\n    }\n  };\n\n  const ref_name = useRef();\n\n  return (\n    <div className=\"SearchBar\">\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          ref={ref_name}\n          placeholder=\"Search Odinbook\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResult.js",["278","279","280","281","282","283"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./SearchResult.css\";\nimport axios from \"axios\";\nimport SearchResultCard from \"./SearchResultCard\";\n\nconst SearchResult = () => {\n  const { searchValue, axios_request } = useContext(OdinBookContext);\n\n  const [searchValueChange, setSearchValueChange] = searchValue;\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const params = useParams();\n\n  const [error, setError] = useState(\"\");\n\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [result, setResult] = useState([]);\n\n  const make_server_request = () => {\n    // friendBtn.splice(0, friendBtn.length);\n    // setFriendBtn(friendBtn);\n    // console.log(friendBtn);\n\n    const user_list_route = `/user/search/${params.name}`;\n    const user_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      if (err.response) {\n        console.log(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      console.log(response);\n      setGetLoading(false);\n      if (!Array.isArray(response.data)) {\n        setResult([response.data]);\n      } else {\n        setResult(response.data);\n      }\n      const h = Array(response.data.length).fill(false);\n      setFriendBtn(h);\n    };\n\n    axios_request({\n      route: user_list_route,\n      data: \"\",\n      method: user_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (searchValueChange === true) {\n      make_server_request();\n\n      setSearchValueChange(false);\n    }\n  }, [searchValueChange]);\n\n  useEffect(() => {\n    if (!searchValueChange) {\n      if (params) {\n        // console.log(\"skdksjdskdjskdjsdk\");\n        //to prefill the search bar with the value in the url incase the user refrehes the page\n        const element = document.querySelector(\"#search\");\n        element.value = params.name;\n        // console.log(params);\n        make_server_request();\n      }\n    }\n  }, []);\n\n  let arrg = [];\n\n  console.log(friendBtn);\n\n  return (\n    <div className=\"SearchResult\">\n      {getLoading && \"loading...\"}\n      {!getLoading &&\n        (error ? (\n          <div className=\"error\">{error}</div>\n        ) : result.length == 0 ? (\n          <div className=\"empty\">No users found with this query :(</div>\n        ) : (\n          result.map((value, index) => {\n            return (\n              <SearchResultCard\n                value={value}\n                index={index}\n                setResult={setResult}\n                result={result}\n                setError={setError}\n                key={uniqid()}\n                friendBtn={friendBtn}\n                setFriendBtn={setFriendBtn}\n                arrg={arrg}\n              />\n            );\n          })\n        ))}\n    </div>\n  );\n};\n\nexport default SearchResult;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetail.js",["284"],"import React, { useContext } from \"react\";\nimport UserNav from \"./UserNav\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useParams,\n  useLocation,\n  useHistory,\n  Link,\n} from \"react-router-dom\";\nimport UserAbout from \"./UserAbout\";\nimport UserPost from \"./UserPost\";\nimport UserFriend from \"./UserFriend\";\nimport \"./UserDetail.css\";\nimport { OdinBookContext } from \"../Context\";\nimport UserDetailFriendBtn from \"./UserDetailFriendBtn\";\n\nconst UserDetail = () => {\n  const location = useLocation();\n  let params = useParams();\n  console.log(params);\n  console.log(location.state);\n  const history = useHistory();\n  console.log(history);\n\n  const { jwtData } = useContext(OdinBookContext);\n\n  let userid;\n  let fname;\n  let lname;\n  let username;\n  if (location.state.userid) {\n    fname = location.state.fname;\n    lname = location.state.lname;\n    username = location.state.username;\n    userid = location.state.userid;\n  }\n\n  return (\n    <div className=\"UserDetail\">\n      <div className=\"user-banner-container\">\n        <div className=\"user-banner\">\n          {params.username}\n          <div className=\"banner-btn\">\n            {userid && userid !== jwtData.sub && (\n              <div className=\"chat-link-container\">\n                <Link\n                  to={{\n                    pathname: \"/chat\",\n                    state: {\n                      userid: userid,\n                      fname: fname,\n                      lname: lname,\n                      username: username,\n                    },\n                  }}\n                >\n                  <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n                </Link>\n              </div>\n            )}\n            {userid && userid !== jwtData.sub && <UserDetailFriendBtn />}\n          </div>\n        </div>\n\n        <div className=\"name-container\">\n          <div className=\"name\">\n            <span>{location.state.fname} </span>\n            <span> {location.state.lname}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"UserNav\">\n        <UserNav\n          to={`/user/${params.username}/posts`}\n          fname={location.state.fname}\n          lname={location.state.lname}\n          userid={location.state.userid}\n          username={location.state.username}\n          label=\"Posts\"\n        />\n        <UserNav\n          to={`/user/${params.username}/about`}\n          fname={location.state.fname}\n          lname={location.state.lname}\n          userid={location.state.userid}\n          username={location.state.username}\n          label=\"About\"\n        />\n        <UserNav\n          to={`/user/${params.username}/friends`}\n          fname={location.state.fname}\n          lname={location.state.lname}\n          userid={location.state.userid}\n          username={location.state.username}\n          label=\"Friends\"\n        />\n      </div>\n      <Switch>\n        <Route path={`/user/${params.username}/posts`}>\n          <UserPost path=\"userpost\" />\n        </Route>\n        <Route path={`/user/${params.username}/about`}>\n          <UserAbout />\n        </Route>\n        <Route path={`/user/${params.username}/friends`}>\n          <UserFriend />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default UserDetail;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserNav.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPost.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAbout.js",["299","300","301","302","303","304","305","306"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport UseraAboutCard from \"./UserAboutCard\";\nimport uniqid from \"uniqid\";\nimport \"./UserAbout.css\";\n\nconst UserAbout = () => {\n  const {\n    myAboutValue,\n    didMyAboutMountValue,\n    axios_request,\n    jwtData,\n  } = useContext(OdinBookContext);\n  const [myAbout, setMyAbout] = myAboutValue;\n  const [didMyAboutMount, setdidMyAboutMount] = didMyAboutMountValue;\n\n  const [result, setResult] = useState();\n\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [about, setAbout] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const location = useLocation();\n  const fname = location.state.fname;\n  const lname = location.state.lname;\n  const username = location.state.username;\n  const userid = location.state.userid;\n\n  const profile_route = `/profile/${userid}`;\n  const profile_route_method = \"GET\";\n\n  const [clickIndex, setClickIndex] = useState(null);\n\n  const make_server_request = () => {\n    const cb_response = (response) => {\n      if (userid === jwtData.sub) {\n        setMyAbout(response.data);\n      }\n      console.log(response.data);\n      setResult(response.data);\n\n      setGetLoading(false);\n    };\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: profile_route,\n      data: \"\",\n      method: profile_route_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    console.log(jwtData.sub, userid);\n    if (jwtData.sub !== userid) {\n      make_server_request();\n    } else {\n      if (didMyAboutMount) {\n        make_server_request();\n        setdidMyAboutMount(false);\n      } else {\n        setResult(myAbout);\n        setGetLoading(false);\n      }\n    }\n  }, [location.pathname]);\n\n  let g;\n  if (result) {\n    delete result.user;\n    delete result._id;\n    delete result.__v;\n\n    g = Object.keys(result);\n    console.log(g);\n  }\n\n  const [tooltip, setTooltip] = useState(null);\n  const [ee, setee] = useState({});\n\n  useEffect(() => {\n    if (result) {\n      let h = {};\n      for (let i = 0; i < g.length; i++) {\n        h[g[i]] = result[g[i]];\n        if (i === g.length - 1) {\n          setee(h);\n        }\n      }\n    }\n  }, [result]);\n\n  // const [ee, setee] = useState();\n  console.log(ee);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e) => {\n      // console.log(e.key, \"jdfjdfjdfnjdfn\");\n      if (e.key == \"Escape\") {\n        setClickIndex(null);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"UserAbout\">\n      {getLoading && (\n        <div className=\"loading-container\">\n          <div className=\"spinner-border loading\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      )}\n      {!getLoading &&\n        (error ? (\n          <div className=\"error\">{error}</div>\n        ) : (\n          g.map((value, index) => {\n            return (\n              <UseraAboutCard\n                key={uniqid()}\n                objkey={value}\n                index={index}\n                clickIndex={clickIndex}\n                setClickIndex={setClickIndex}\n                result={result}\n                setResult={setResult}\n                ee={ee}\n                setee={setee}\n                tooltip={tooltip}\n                setTooltip={setTooltip}\n                userid={userid}\n                jwtData={jwtData}\n              />\n            );\n          })\n        ))}\n    </div>\n  );\n};\n\nexport default UserAbout;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriend.js",["307","308","309","310","311","312","313","314","315","316","317","318"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation, Link, useParams, useHistory } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./UserFriend.css\";\nimport UserFriendCard from \"./UserFriendCard\";\nimport async from \"async\";\n\nconst UserFriend = ({ path }) => {\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n  const [result, setResult] = useState([]);\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const [isChanged, setIsChanged] = useState(false);\n  const { myFriendsValue, didMyFriendsMountValue, axios_request } = useContext(\n    OdinBookContext\n  );\n\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n  const location = useLocation();\n  let userid;\n  let username;\n  let fname;\n  let lname;\n  //since there will be no location.state for myfriends route.\n  if (path != \"myfriends\") {\n    userid = location.state.userid;\n    fname = location.state.fname;\n    lname = location.state.lname;\n  }\n\n  // const params = useParams();\n  // console.log(\"params\", params);\n  // const history = useHistory();\n  // console.log(\"histroy\", history);\n\n  // console.log(path);\n  const make_server_request = () => {\n    let friend_list_route;\n    if (path == \"myfriends\") {\n      friend_list_route = `/friend/${jwtData.sub}`;\n      console.log(path);\n    } else {\n      friend_list_route = `/friend/${userid}`;\n      console.log(userid);\n    }\n    const friend_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      if (path == \"myfriends\") {\n        setMyFriends(response.data);\n      } else {\n        if (userid == jwtData.sub) {\n          setMyFriends(response.data);\n        } else {\n          const h = Array(response.data.length).fill(false);\n          setFriendBtn(h);\n        }\n      }\n      setResult(response.data);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: friend_list_route,\n      data: \"\",\n      method: friend_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n  const { jwtData } = useContext(OdinBookContext);\n\n  useEffect(() => {\n    if (path == \"myfriends\") {\n      if (didMyFriendsMount) {\n        make_server_request();\n        setDidMyFriendsMount(false);\n      } else {\n        setResult(myFriends);\n        setGetLoading(false);\n      }\n    } else {\n      if (jwtData.sub !== userid) {\n        make_server_request();\n      } else {\n        if (didMyFriendsMount) {\n          make_server_request();\n          setDidMyFriendsMount(false);\n        } else {\n          setResult(myFriends);\n          setGetLoading(false);\n        }\n      }\n    }\n\n    // get_my_friend_list();\n  }, [location.pathname]);\n\n  // console.log(myFriendList);\n  // console.log(result);\n  console.log(path);\n  return (\n    <div\n      className={path === \"myfriends\" ? \"UserFriend\" : \"UserFriend myaccount\"}\n    >\n      {getLoading && (\n        <div className=\"loading-container\">\n          <div className=\"spinner-border loading\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      )}\n      {!getLoading &&\n        (error ? (\n          <div className=\"error\">{error}</div>\n        ) : result.length === 0 ? (\n          <div className=\"empty-friends\">\n            {path !== \"myfriends\" && jwtData.sub !== userid && (\n              <div>\n                <span>{fname} </span> <span>{lname} </span>\n                <span>has no friends on OdinBook :(</span>\n              </div>\n            )}\n            {(path === \"myfriends\" || jwtData.sub === userid) && (\n              <div>\n                <div>You don't have any friends to show.</div>\n                <div>You can add them by searching their name :)</div>\n                <div>To search with username, please prefix with '@' :)</div>\n              </div>\n            )}\n          </div>\n        ) : (\n          result.map((value, index) => {\n            return (\n              <UserFriendCard\n                value={value}\n                index={index}\n                setError={setError}\n                key={uniqid()}\n                friendBtn={friendBtn}\n                setFriendBtn={setFriendBtn}\n                userid={userid}\n                isChanged={isChanged}\n                setIsChanged={setIsChanged}\n                path={path}\n              />\n            );\n          })\n        ))}\n    </div>\n  );\n};\n\nexport default UserFriend;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/NewsFeed/NewsFeed.js",["319","320"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport NewsFeedCard from \"./NewsFeedCard\";\n// import \"./NewsFeed.css\";\n\nconst NewsFeed = () => {\n  const { axios_request } = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [result, setResult] = useState(\"\");\n\n  const [newsfeedLikedIndex, setNewsFeedLikedIndex] = useState(null);\n\n  const post_list_route = \"/news-feed\";\n  const post_list_method = \"GET\";\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  const make_server_request = () => {\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setResult(response.data);\n      setGetLoading(false);\n      console.log(response.data);\n    };\n\n    axios_request({\n      route: post_list_route,\n      data: \"\",\n      method: post_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const display_posts = () => {\n    let arr = [];\n    console.log(result);\n    if (result.length === 0) {\n      return <div className=\"empty\">No Posts to show</div>;\n    } else {\n      for (let i = 0; i < result.length; i++) {\n        arr.push(<div className=\"card\" key={uniqid()}></div>);\n      }\n      return arr;\n    }\n  };\n\n  return (\n    <div className=\"NewsFeed\">\n      {getLoading && \"loading...\"}\n      {!getLoading && (\n        <>\n          {error ? (\n            <div className=\"error\">{error}</div>\n          ) : (\n            result.map((value, index) => {\n              return (\n                <NewsFeedCard\n                  value={value}\n                  index={index}\n                  key={uniqid()}\n                  newsfeedLikedIndex={newsfeedLikedIndex}\n                  setNewsFeedLikedIndex={setNewsFeedLikedIndex}\n                />\n              );\n            })\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NewsFeed;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/NewsFeed/PostDetail.js",["321"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\nconst PostDetail = () => {\n  const axios_request = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [post, setPost] = useState(\"\");\n  const params = useParams();\n  const post_detail_route = `/post/${params.id}`;\n  const post_detail_method = `GET`;\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  const make_server_request = () => {\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPost(response.data);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: post_detail_route,\n      data: \"\",\n      method: post_detail_method,\n      axios_error: cb_error,\n      axios_reponse: cb_response,\n    });\n  };\n\n  const display_post = () => {\n    return (\n      <>\n        <div className=\"title\">{post.title}</div>\n        <div className=\"content_text\">{post.content_text}</div>\n      </>\n    );\n  };\n  return (\n    <div className=\"PostDetail\">\n      {getLoading && \"loading...\"}\n      {!getLoading && (\n        <>{error ? <div className=\"error\">{error}</div> : display_post()}</>\n      )}\n    </div>\n  );\n};\n\nexport default PostDetail;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriendCard.js",["322","323","324","325","326","327","328","329","330","331","332","333"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UserFriendCard = ({\n  value,\n  index,\n  setError,\n  friendBtn,\n  setFriendBtn,\n  userid,\n  isChanged,\n  setIsChanged,\n  path,\n}) => {\n  // const params = useParams();\n  // console.log(\"params\", params);\n  // const history = useHistory();\n  // console.log(\"histroy\", history);\n  console.log(friendBtn[index]);\n\n  const [myFriendsIndex, setMyFriendsIndex] = useState(null);\n\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n  console.log(\"hello\");\n  //removes friend\n  const clickHandler = () => {\n    // if i don't do this it show 'cannot update state after the component is unmounted'\n    //becoz you are not waiting for the response and directly deleting the user from the sreen\n    // if (personid.toString() !== userid.toString()) {\n    //   setBtnLoading(true);\n    //   setIsClicked(!isClicked);\n    // }\n\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      //!using same state to set Error\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // only do this for the owner,,, bcoz it deletes the user from the screen\n    if (jwtData.sub == userid || path == \"myfriends\") {\n      myFriends.splice(index, 1);\n      setMyFriends(myFriends);\n      setIsChanged(!isChanged);\n    }\n\n    if (jwtData.sub !== userid) {\n      // console.log(myFriendsIndex);\n\n      console.log(friendBtn[index]);\n      if (friendBtn[index] == false) {\n        const get_index = myFriends.findIndex(\n          (x) => x.username == value.username\n        );\n        if (get_index !== -1) {\n          console.log(get_index);\n          myFriends.splice(get_index, 1);\n          setMyFriends(myFriends);\n        }\n      } else {\n        myFriends.push(value);\n      }\n      console.log(myFriends);\n    }\n  };\n\n  const [pp, setpp] = useState(false);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n    console.log(check);\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n      // setMyFriendsIndex(check);\n    }\n    setpp(!pp);\n  }, []);\n\n  console.log(friendBtn[index]);\n\n  // console.log(path);\n  return (\n    <div className=\"UserFriendCard\">\n      {\" \"}\n      <div className=\"profile-picture\">{[...value.fname[0].toLowerCase()]}</div>\n      <div className=\"name-container\">\n        <Link\n          to={{\n            pathname: `/user/${value.username}/posts`,\n            state: {\n              userid: value._id,\n              fname: value.fname,\n              lname: value.lname,\n              username: value.username,\n            },\n          }}\n        >\n          <div className=\"name\">\n            <span>{value.fname} </span>\n            <span>{value.lname}</span>\n          </div>\n        </Link>\n        <div className=\"username\">{value.username}</div>\n      </div>\n      {jwtData.sub !== value._id && (\n        <div\n          className=\"add-btn\"\n          style={{\n            color:\n              path == \"myfriends\"\n                ? \"red\"\n                : jwtData.sub === userid\n                ? \"red\"\n                : friendBtn[index]\n                ? \"red\"\n                : \"blue\",\n          }}\n          onClick={() => {\n            friendBtn[index] = !friendBtn[index];\n            setFriendBtn(friendBtn);\n            setpp(!pp);\n\n            clickHandler();\n          }}\n        >\n          {(jwtData.sub == userid || path === \"myfriends\") && (\n            <div className=\"add-btn fas fa-user-minus\"></div>\n          )}\n          {jwtData.sub !== userid && path !== \"myfriends\" && (\n            <div\n              // style={{ color: \"blue\" }}\n              className={\n                friendBtn[index]\n                  ? \"add-btn fas fa-user-minus\"\n                  : \"add-btn fas fa-user-plus\"\n              }\n            ></div>\n          )}\n        </div>\n      )}\n      {/* value._id woh idividual friend ka id hain and userid jiska profile visit kar rahe hain uska id hain */}\n      {jwtData.sub !== value._id && (\n        <div className=\"chat-link-container\">\n          <Link\n            to={{\n              pathname: \"/chat\",\n              state: {\n                userid: value._id,\n                fname: value.fname,\n                lname: value.lname,\n                username: value.username,\n              },\n            }}\n          >\n            <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserFriendCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResultCard.js",["334","335","336","337","338","339","340","341","342"],"import { Result } from \"express-validator\";\nimport { set } from \"mongoose\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst SearchResultCard = ({\n  value,\n  index,\n  setError,\n  result,\n  friendBtn,\n  setFriendBtn,\n  arrg,\n}) => {\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [myFriendsIndex, setMyFriendsIndex] = useState(null);\n\n  //removes friend\n  const clickHandler = () => {\n    // setIsClicked(!isClicked);\n\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      //!using same state to set Error\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n      // setResponse(response.data);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (friendBtn[index] == false) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username == value.username\n      );\n      if (get_index !== -1) {\n        console.log(get_index);\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push(value);\n    }\n  };\n\n  const [pp, setpp] = useState(false);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n    console.log(check);\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n      // setMyFriendsIndex(check);\n    }\n    setpp(!pp);\n  }, []);\n\n  const element = document.querySelector(\"#search\");\n  // console.log(element.value);\n  console.log(myFriendsIndex);\n  return (\n    <div className=\"SearchResultCard\">\n      <div className=\"profile-picture\">{[...value.fname[0].toLowerCase()]}</div>\n      <div\n        className=\"name-container\"\n        onClick={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          element.value = \"\";\n        }}\n      >\n        <Link\n          to={{\n            pathname: `/user/${value.username}/posts`,\n            state: {\n              userid: value._id,\n              fname: value.fname,\n              lname: value.lname,\n              username: value.username,\n            },\n          }}\n        >\n          <div className=\"name\">\n            <span>{value.fname} </span>\n            <span>{value.lname}</span>\n          </div>\n        </Link>\n        <div className=\"username\">{value.username}</div>\n      </div>\n      {value._id !== jwtData.sub && (\n        <div\n          className={\n            friendBtn[index]\n              ? \"add-btn fas fa-user-minus\"\n              : \"add-btn fas fa-user-plus\"\n          }\n          style={{ color: friendBtn[index] ? \"red\" : \"blue\" }}\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            friendBtn[index] = !friendBtn[index];\n            setFriendBtn(friendBtn);\n            setpp(!pp);\n            clickHandler();\n          }}\n        ></div>\n      )}\n\n      {value._id !== jwtData.sub && (\n        <div className=\"chat-link-container\">\n          <Link\n            to={{\n              pathname: \"/chat\",\n              state: {\n                userid: value._id,\n                fname: value.fname,\n                lname: value.lname,\n                username: value.username,\n              },\n            }}\n          >\n            <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResultCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyFriends/MyFriends.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyFriends/MyFriendsCard.js",["343","344","345","346","347","348","349"],"import { set } from \"mongoose\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport { axios_request } from \"../Utils\";\n\nconst MyFriendsCard = ({\n  value,\n  index,\n  myFriends,\n  setMyFriends,\n  setError,\n  // myFriendsBtn,\n  // setMyFriendsBtn,\n  isChanged,\n  setIsChanged,\n}) => {\n  //here we will also delete the friend from the screen maybe with a confirm message.\n  //e.g. are you sure you want to remove this friend.\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      //!using same state to set Error\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    console.log(index);\n    console.log(myFriends[index]);\n    myFriends.splice(index, 1);\n    setMyFriends(myFriends);\n    setIsChanged(!isChanged);\n    // myFriendsBtn.splice(index, 1);\n    // setMyFriendsBtn(myFriendsBtn);\n  };\n\n  useEffect(() => {}, [myFriends]);\n  return (\n    <div className=\"MyFriendsCard\">\n      <div className=\"profile-picture\">{[...value.fname[0].toLowerCase()]}</div>\n      <div className=\"name-container\">\n        <Link\n          to={{\n            pathname: `/user/${value.username}/posts`,\n            state: {\n              fname: value.fname,\n              lname: value.lname,\n              username: value.username,\n              userid: value._id,\n            },\n          }}\n        >\n          <div className=\"name\">\n            <span>{value.fname} </span>\n            <span>{value.lname}</span>\n          </div>\n        </Link>\n        <div className=\"username\">{value.username}</div>\n      </div>\n      <div className=\"add-btn\">\n        <button\n          onClick={() => {\n            // console.log(friendArray[index]);\n            // console.log(myFriendsBtn[index]);\n            // myFriendsBtn[index] = !myFriendsBtn[index];\n            // setMyFriendsBtn(myFriendsBtn);\n\n            return clickHandler();\n          }}\n        >\n          Remove\n          {/* {myFriendsBtn[index] ? \"Remove\" : \"Add\"} */}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyFriendsCard;\n",["350","351"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Hamburger/Hamburger.js",["352"],"import React, { useCallback, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./Hamburger.css\";\n\nconst Hamburger = () => {\n  const { jwtData } = useContext(OdinBookContext);\n  console.log(jwtData);\n\n  console.log(jwtData);\n\n  return (\n    <div className=\"Hamburger\">\n      <div className=\"box-1 box\">\n        <Link\n          to={{\n            pathname: `/user/${jwtData.user}/posts`,\n            state: {\n              fname: jwtData.fname,\n              lname: jwtData.lname,\n              username: jwtData.user,\n              userid: jwtData.sub,\n            },\n          }}\n        >\n          <div className=\"profile-picture\">\n            {[...jwtData.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"nav-link-container\">\n            <div className=\"user label\">{jwtData.user}</div>\n\n            <div className=\"nav-link-desc label\">See your profile</div>\n          </div>\n        </Link>\n      </div>\n\n      <div className=\"box-2 box\">\n        <Link to=\"/logout\">\n          <div className=\"label\">Logout</div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPostCard.js",["353","354","355","356","357","358","359","360","361","362","363","364"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/CommentCard/CommentCard.js",["365","366","367","368","369","370","371","372","373","374"],"import React, { useContext, useEffect, useState } from \"react\";\nimport \"./CommentCard.css\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport CommentUpdate from \"../Comment/CommentUpdate\";\nimport CommentDelete from \"../Comment/CommentDelete\";\n\nconst CommentCard = ({\n  comment,\n  index,\n  postIndex,\n  path,\n  commentOptionIndex,\n  setCommentOptionIndex,\n  postid,\n  comments,\n  setComments,\n  pp,\n  setpp,\n}) => {\n  // console.log(comment);\n  // console.log(path);\n\n  const { jwtData } = useContext(OdinBookContext);\n\n  // const [isChanged, setIsChanged] = useState(false);\n\n  const location = useLocation();\n  let userid;\n  if (location.state) {\n    userid = location.state.userid;\n  }\n  // console.log(comment.user._id, jwtData.sub, path);\n  // console.log(isChanged);\n  // useEffect(() => {}, [isChanged]);\n  // console.log(commentOptionIndex);\n  const [commentUpdateClick, setCommentUpdateClick] = useState(false);\n  const [commentDeleteClick, setCommentDeleteClick] = useState(false);\n\n  return (\n    <div className=\"CommentCard\">\n      <div className=\"profile-picture\">\n        {[...comment.user.fname[0].toLowerCase()]}\n      </div>\n      <div className=\"comment-container\">\n        <div className=\"name\">\n          {((path == \"userpost\" && comment.user._id !== jwtData.sub) ||\n            path == \"newsfeed\") && (\n            <Link\n              to={{\n                pathname: `/user/${comment.user.username}/posts`,\n                state: {\n                  fname: comment.user.fname,\n                  lname: comment.user.lname,\n                  username: comment.user.username,\n                  userid: comment.user._id,\n                },\n              }}\n            >\n              <span>{comment.user.fname} </span>\n              <span>{comment.user.lname}</span>\n            </Link>\n          )}\n          {path === \"userpost\" && comment.user._id === jwtData.sub && (\n            <>\n              <span>{comment.user.fname} </span>\n              <span>{comment.user.lname}</span>\n            </>\n          )}\n        </div>\n        <div className=\"comment\">{comment.comment}</div>\n      </div>\n      <div\n        className=\"option-icon\"\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (commentOptionIndex == index) {\n            setCommentOptionIndex(null);\n          } else {\n            setCommentOptionIndex(index);\n          }\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: commentOptionIndex == index ? \"lightgray\" : \"\",\n          }}\n          className=\"btn fas fa-ellipsis-v\"\n        ></div>\n        {commentOptionIndex === index && (\n          <div className=\"comment-menu\">\n            {/* <div\n            onClick={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              setCommentUpdateClick(!commentUpdateClick);\n            }}\n          >\n            Edit\n          </div> */}\n            <div\n              className=\"comment-btn delete-comment-btn\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                setCommentDeleteClick(!commentDeleteClick);\n              }}\n            >\n              Delete\n            </div>\n          </div>\n        )}\n        {/* {commentUpdateClick && (\n        <CommentUpdate\n          postid={postid}\n          updateValue={comment.comment}\n          setComments={setComments}\n          commentid={comment._id}\n          commentUpdateClick={commentUpdateClick}\n          setCommentUpdateClick={setCommentUpdateClick}\n        />\n      )} */}\n        {commentDeleteClick && (\n          <CommentDelete\n            postid={postid}\n            index={index}\n            setComments={setComments}\n            comments={comments}\n            commentid={comment._id}\n            commentDeleteClick={commentDeleteClick}\n            setCommentDeleteClick={setCommentDeleteClick}\n            pp={pp}\n            setpp={setpp}\n            setCommentOptionIndex={setCommentOptionIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/NewsFeed/NewsFeedCard.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikes.js",["375","376","377"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikesCard.js",["378","379","380"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentCreate.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentUpdate.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentForm.js",["381"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentDelete.js",["382","383","384","385"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./CommentDelete.css\";\n\nconst CommentDelete = ({\n  postid,\n  index,\n  setComments,\n  commentid,\n  commentDeleteClick,\n  setCommentDeleteClick,\n  comments,\n  // isChanged,\n  // setIsChanged,\n  setCommentOptionIndex,\n  pp,\n  setpp,\n}) => {\n  console.log(comments);\n\n  const { axios_request } = useContext(OdinBookContext);\n  const mypost_delete_route = `/post/${postid}/comment/${commentid}`;\n  const mypost_delete_method = \"DELETE\";\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const make_server_request = () => {\n    console.log(index);\n    comments[index] = comments.comment_list.splice(index, 1);\n    console.log(comments);\n    setComments(comments);\n    setpp(!pp);\n    setCommentOptionIndex(null);\n    const cb_error = (err) => {\n      setError(err.message);\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n      // setDeleteClick(false);\n    };\n\n    axios_request({\n      route: mypost_delete_route,\n      data: \"\",\n      method: mypost_delete_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // setIsChanged(!isChanged);\n    // console.log(isChanged);\n  };\n\n  const deleteHandler = () => {\n    make_server_request();\n  };\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  console.log(comments);\n  // console.log(isChanged);\n  return (\n    <div className=\"CommentDelete\">\n      {/* {error && (\n        <div className=\"error\">\n          <div>{error}</div>\n          <div>Please try refreshing the Page</div>\n        </div>\n      )}\n      {!error && (\n        <div className=\"dialog-box\">\n          <p className=\"confitm-msg\">\n            Are you sure want to delete this comment?\n          </p>\n          <div className=\"btn\">\n            <button\n              className=\"dlt-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                if (!postLoading) {\n                  setPostLoading(true);\n                  deleteHandler();\n                } else {\n                  return;\n                }\n              }}\n            >\n              {!postLoading ? \"Delete\" : \"Deleting comment....\"}\n            </button>\n\n            <button\n              className=\"cancel-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setCommentDeleteClick(false);\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )} */}\n    </div>\n  );\n};\n\nexport default CommentDelete;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAboutCard.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/Chat.js",["413","414","415","416","417","418","419"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport socketIOClient, { io } from \"socket.io-client\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./Chat.css\";\nimport ChatCard from \"./ChatCard\";\n\nconst Chat = () => {\n  const location = useLocation();\n\n  const { axios_request, jwtData, socket, isReadValue } = useContext(\n    OdinBookContext\n  );\n\n  //this detail are of the person on whose chat btn we clicked\n  const fname = location.state.fname;\n  const lname = location.state.lname;\n  const userid = location.state.userid;\n  const username = location.state.username;\n\n  console.log(userid);\n\n  const [tempResponse, setTempResponse] = useState([]);\n  const [response, setResponse] = useState([]);\n  const [msgArr, setMsgArr] = useState([]);\n\n  const [mymsgloading, setmsgloading] = useState(true);\n  const [responseloading, setresponseloading] = useState(true);\n\n  const [myMsg, setMyMsg] = useState([]);\n\n  const [isRead, setIsRead] = isReadValue;\n\n  useEffect(() => {\n    socket.on(\"new_msg\", (data) => {\n      console.log(data);\n\n      setTempResponse([\n        ...tempResponse,\n        { message: data.message, createdAt: data.createdAt },\n      ]);\n    });\n  }, [socket]);\n\n  console.log(msgArr);\n  useEffect(() => {\n    if (tempResponse.length !== 0) {\n      setMsgArr([...msgArr, ...tempResponse]);\n    }\n  }, [tempResponse]);\n\n  console.log(msgArr, \"48 msgArr\");\n  useEffect(() => {\n    const h = async () => {\n      await Promise.all([get_responses(), get_my_messages()]);\n    };\n    h();\n    // get_responses();\n    // get_my_messages();\n\n    save_isreadtrue();\n  }, []);\n\n  // get the messages I sent to Komal\n  const get_responses = () => {\n    // sender = jwtData.sub\n    console.log(\"get responses\");\n    const route = `/chat/${userid}/${jwtData.sub}`;\n    const method = \"GET\";\n\n    const cb_response = (response) => {\n      console.log(response);\n      if (response.data.length !== 0) {\n        let newArr = response.data.message_container.map((v) => ({\n          ...v,\n          isOwner: true,\n        }));\n        setResponse(newArr);\n      } else {\n        //it might happen that there are no sent messages.\n        setResponse([{ message: \"\", createdAt: \"\" }]);\n      }\n      console.log(response, \"get responses\");\n\n      setresponseloading(false);\n    };\n\n    const cb_error = (error) => {\n      console.log(error);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  // the messages Komal sent to me\n  const get_my_messages = () => {\n    console.log(\"my messages\");\n    const route = `/chat/${jwtData.sub}/${userid}`;\n    const method = \"GET\";\n\n    const cb_response = (response) => {\n      console.log(response, \"get my messages\");\n      if (response.data.length !== 0) {\n        setMyMsg(response.data.message_container);\n      } else {\n        //it might happen that there are no response msgs and only ond side messages.\n        setMyMsg([{ message: \"\", createdAt: \"\" }]);\n      }\n      setmsgloading(false);\n    };\n\n    const cb_error = (error) => {\n      console.log(error);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (!mymsgloading && !responseloading) {\n      let arr = [...response, ...myMsg];\n      console.log(arr);\n\n      let sorted = arr.sort((a, b) => {\n        // console.log(a, b);\n        return a.createdAt < b.createdAt\n          ? -1\n          : a.createdAt > b.createdAt\n          ? 1\n          : 0;\n      });\n      console.log(sorted);\n\n      setMsgArr(sorted);\n    }\n  }, [mymsgloading, responseloading]);\n\n  const save_isreadtrue = () => {\n    const route = `/isreadtrue/${userid}`;\n    const method = \"PUT\";\n    const cb_error = (err) => {};\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (isRead.length > 0) {\n      const is_read_index = isRead.findIndex((x) => x.user === userid);\n      if (is_read_index !== -1) {\n        isRead[is_read_index].isread = [];\n        isRead[is_read_index].isread.push(true);\n        setIsRead(isRead);\n      }\n    }\n    //else will be... there are no messages to set to read=true\n  };\n\n  useEffect(() => {\n    const element = document.querySelector(\".Chat\");\n    console.log(element);\n    const height = element.scrollHeight;\n    console.log(height);\n    element.scrollTo(0, height);\n  }, [msgArr]);\n\n  console.log(mymsgloading, responseloading);\n  console.log(msgArr);\n  return (\n    <div className=\"Chat\">\n      {mymsgloading && responseloading && (\n        <div className=\"loading-container\">\n          <div className=\"spinner-border loading\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      )}\n      {!mymsgloading && !responseloading && (\n        <ChatCard\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          msgArr={msgArr}\n          setMsgArr={setMsgArr}\n          responseloading={responseloading}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatCard.js",["420","421","422"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ChatMap from \"./ChatMap\";\nimport uniqid from \"uniqid\";\nimport axios from \"axios\";\n\nconst ChatCard = ({\n  fname,\n  lname,\n  userid,\n  username,\n  // myMsg,\n  // setMyMsg,\n  // response,\n  // setResponse,\n  msgArr,\n  setMsgArr,\n  // responseLoading,\n  // mymsgloading,\n}) => {\n  console.log(\"chatcard\");\n\n  const valueRef = useRef();\n\n  const { jwtData, socket, axios_request, myChatListValue } = useContext(\n    OdinBookContext\n  );\n\n  const [myChatList, setMyChatList] = myChatListValue;\n\n  console.log(msgArr);\n  const submitHandler = () => {\n    // e.preventDefault();\n\n    // const date = Date.now();\n\n    // setMyMsg([...myMsg, { msg: state, date: date }]);\n\n    // setSubmitMsg({ message: state, createdAt: new Date().toISOString() });\n\n    setMsgArr([\n      ...msgArr,\n      {\n        message: valueRef.current.value,\n        createdAt: new Date().toISOString(),\n        isOwner: true,\n      },\n    ]);\n\n    socket.emit(\"send_message\", {\n      to: username,\n      from: {\n        fname: jwtData.fname,\n        lname: jwtData.lname,\n        username: jwtData.user,\n        userid: jwtData.sub,\n      },\n      message: valueRef.current.value,\n      createdAt: new Date().toISOString(),\n    });\n\n    const check = myChatList.findIndex((x) => x.user._id === userid);\n    if (check !== -1) {\n      myChatList[check].last_msg = new Date().toISOString();\n    } else {\n      myChatList.push({\n        last_msg: new Date().toISOString(),\n        user: {\n          fname: fname,\n          lname: lname,\n          username: username,\n          _id: userid,\n        },\n      });\n    }\n    const sort_arr = myChatList.sort((a, b) =>\n      b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0\n    );\n\n    setMyChatList(sort_arr);\n\n    valueRef.current.value = \"\";\n  };\n\n  const save_messages_on_database = (msg) => {\n    const route = `/chat/${userid}`;\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      console.log(err);\n    };\n\n    console.log(\"msg=\", msg);\n    const cb_response = (response) => {\n      console.log(userid);\n      console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: msg,\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  //!we are doing save_received and save_sent from the user who sent message and not by socket.io because if the other user is not online then he wont be able to make updates on his sent_received object.\n  //arvind to komal msg sent\n  //save my name in komal's (people from who I received message)\n  const save_received = () => {\n    const route = `/mychat/${jwtData.sub}/${userid}`;\n    const method = \"PUT\";\n\n    console.log(\"hello\");\n    const cb_error = (err) => {};\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: { last_msg: new Date().toISOString() },\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  //save Komal's name in my sent list.\n  //if she already in received then we don't need this function\n  //we can find this out with if the messages from both are not null\n  //we will not call this request if the length of messages<=2;\n  //we will call this only once because we need to delete the name from the list\n  const save_sent = () => {\n    const route = `/mychat/${userid}/${jwtData.sub}`;\n    const method = \"PUT\";\n\n    console.log(\"hello\");\n    const cb_error = (err) => {};\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: { last_msg: new Date().toISOString() },\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    console.log(userid);\n  };\n\n  const save_isread_false = () => {\n    const route = `/isreadfalse/${userid}`;\n    const method = \"PUT\";\n\n    console.log(\"hello\");\n    const cb_error = (err) => {};\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_response: cb_response,\n      axios_error: cb_error,\n    });\n  };\n  console.log(valueRef);\n  return (\n    <div className=\"ChatCard\">\n      <div className=\"head-top\">\n        <div className=\"profile-picture\">{[...fname][0].toLowerCase()}</div>\n        <div className=\"name\">\n          <span>{fname} </span>\n          <span>{lname}</span>\n        </div>\n      </div>\n      <form>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            // onChange={changeHandler}\n            ref={valueRef}\n            name=\"msg\"\n            id=\"msg\"\n          />\n\n          <div className=\"send-btn\">\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                if (valueRef.current.value === \"\") {\n                  return;\n                } else {\n                  save_isread_false();\n                  save_received();\n                  save_sent();\n                  save_messages_on_database({\n                    message: valueRef.current.value,\n                    createdAt: new Date().toISOString(),\n                  });\n                  submitHandler();\n                }\n              }}\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"chat-map-container\">\n        {msgArr.map((value, index) => {\n          return <ChatMap value={value} index={index} key={uniqid()} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatMap.js",["423","424","425","426"],"import React, { useEffect } from \"react\";\nimport \"./ChatMap.css\";\n\nconst ChatMap = ({ value, index }) => {\n  let d;\n  let yearstr;\n  let splityear;\n  if (value.createdAt !== \"\") {\n    d = new Date(value.createdAt);\n\n    // console.log(d.getFullYear());\n    yearstr = d.getFullYear().toString();\n    splityear = [...yearstr];\n  }\n\n  return (\n    <div className=\"ChatMap\">\n      {value.message !== \"\" && (\n        <div className={value.isOwner == true ? \"me\" : \"person\"}>\n          <div\n            className={value.isOwner == true ? \"curve-right\" : \"curve-left\"}\n          ></div>\n\n          <div className={value.isOwner == true ? \"right\" : \"left\"}>\n            <div className=\"message\">{value.message}</div>\n            <div className=\"date-container\">\n              <div className=\"date\">\n                <span>{d.getDate()}/</span>\n                <span>{d.getMonth() + 1}/</span>\n                <span>{splityear[2]}</span>\n                <span>{splityear[3]}</span>\n              </div>\n              <div className=\"time\">\n                <span>\n                  {d.getHours() > 12\n                    ? d.getHours() - 12\n                    : d.getHours() === 0\n                    ? 12\n                    : d.getHours()}\n                  :\n                </span>\n                <span>\n                  {d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes()}\n                </span>\n                <span>{d.getHours() > 12 ? \"pm\" : \"am\"}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatMap;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetailFriendBtn.js",["427","428","429","430","431","432","433","434"],"import { concatSeries } from \"async\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./UserDetail.css\";\nimport UserDetailFriendBtnCard from \"./UserDetailFriendBtnCard\";\n\nconst UserDetailFriendBtn = () => {\n  const {\n    jwtData,\n    axios_request,\n    didMyFriendsMountValue,\n    myFriendsValue,\n  } = useContext(OdinBookContext);\n  const location = useLocation();\n  const userid = location.state.userid;\n  const fname = location.state.fname;\n  const lname = location.state.lname;\n  const username = location.state.username;\n\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [isFriend, setIsFriend] = useState([]);\n  const [index, setIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // const [isClicked, setIsClicked] = useState(false);\n\n  const get_friend = () => {\n    const route = `/friend/${jwtData.sub}`;\n    const method = \"GET\";\n\n    const cb_error = (err) => {\n      console.log(err.message);\n    };\n\n    const cb_response = (response) => {\n      setMyFriends(response.data);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_response: cb_response,\n      axios_error: cb_error,\n    });\n  };\n\n  const post_friend_value = () => {\n    console.log(isFriend);\n\n    if (isFriend == true) {\n      if (index == null) {\n        console.log(\"56 spliced null\");\n        myFriends.splice(myFriends.length - 1, 1);\n        setMyFriends(myFriends);\n        setIsFriend(false);\n      } else {\n        console.log(\"61 spliced not null\", index);\n        myFriends.splice(index, 1);\n        setIndex(null);\n        setIsFriend(false);\n      }\n    } else {\n      console.log(\"pushed\", index);\n      myFriends.push({\n        _id: userid,\n        username: username,\n        fname: fname,\n        lname: lname,\n      });\n    }\n\n    const route = `/friend/${userid}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      console.log(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response.data);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    console.log(didMyFriendsMount);\n    if (didMyFriendsMount) {\n      get_friend();\n      setDidMyFriendsMount(false);\n    }\n  }, []);\n\n  const check = () => {\n    let include = false;\n    for (let i = 0; i < myFriends.length; i++) {\n      if (myFriends[i]._id == userid) {\n        setIsFriend(true);\n        include = true;\n        setIndex(i);\n        break;\n      }\n    }\n\n    if (!include) {\n      setIsFriend(false);\n    }\n  };\n\n  useEffect(() => {\n    check();\n  }, [myFriends, location.pathname]);\n\n  // console.log(\"isFriend\", isFriend);\n  // console.log(index);\n\n  return (\n    <div className=\"UserDetailFriendBtn\">\n      <div\n        style={{ color: isFriend ? \"red\" : \"blue\" }}\n        className={\n          isFriend ? \"add-btn fas fa-user-minus\" : \"add-btn fas fa-user-plus\"\n        }\n        onClick={(e) => {\n          e.preventDefault();\n          post_friend_value();\n          setIsFriend(!isFriend);\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default UserDetailFriendBtn;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetailFriendBtnCard.js",["435"],"import React, { useContext, useEffect } from \"react\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UserDetailFriendBtnCard = (\n  value,\n  index,\n  userid,\n  isFriend,\n  setIsFriend\n) => {\n  const { axios_request } = useContext(OdinBookContext);\n\n  const post_friend_value = () => {\n    const route = `/friend/${userid}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      console.log(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response.data);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (value._id === userid) {\n      isFriend[index] = true;\n      setIsFriend(isFriend);\n    } else {\n      isFriend[index] = false;\n      setIsFriend(isFriend);\n    }\n  }, []);\n\n  console.log(\"hello\");\n  return (\n    <div className=\"UserDetailFriendBtn\">\n      {/* {value._id == userid && ( */}\n      <div\n        className={\n          isFriend[index]\n            ? \"add-btn fas fa-user-minus\"\n            : \"add-btn fas fa-user-plus\"\n        }\n        onClick={(e) => {\n          e.preventDefault();\n          post_friend_value();\n\n          console.log(isFriend[index]);\n        }}\n      ></div>\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default UserDetailFriendBtnCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatList.js",["436","437","438","439","440"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ChatListCard from \"./ChatListCard\";\nimport uniqid from \"uniqid\";\nimport \"./ChatList.css\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:3000\";\n\nconst ChatList = () => {\n  const {\n    axios_request,\n    jwtData,\n    myChatListValue,\n    didMyChatListMountValue,\n    isReadValue,\n    socket,\n  } = useContext(OdinBookContext);\n\n  const [isRead, setIsRead] = isReadValue;\n\n  const [myChatList, setMyChatList] = myChatListValue;\n  const [didMyChatListMount, setDidMyChatListMount] = didMyChatListMountValue;\n\n  const [chatListLoading, setChatListLoading] = useState(true);\n  const [isreadLoading, setIsreadLoading] = useState(true);\n\n  const [tempIsread, settempIsread] = useState([]);\n  const [ischange, setischange] = useState(false);\n\n  const get_chat_list = () => {\n    const route = `/mychat`;\n    const method = \"GET\";\n\n    const cb_error = (err) => {\n      console.log(err);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n      const a = response.data.received;\n      const b = response.data.sent;\n      // console.log(b);\n      if (b.length > 0) {\n        a.forEach((value) => {\n          // console.log(value);\n          const dupl_index = b.findIndex((x) => x.user._id === value.user._id);\n          if (dupl_index !== -1) {\n            b.splice(dupl_index, 1);\n          }\n        });\n      }\n\n      const c = [...a, ...b];\n\n      const sort_arr = c.sort((a, b) => {\n        // console.log(a.last_msg);\n        return b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0;\n      });\n\n      setMyChatList(sort_arr);\n\n      setChatListLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_isread = () => {\n    const route = \"/isread\";\n    const method = \"GET\";\n\n    const cb_error = (err) => {};\n    const cb_response = (response) => {\n      // console.log(response.data.users);\n      setIsRead(response.data.users);\n      setIsreadLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_response: cb_response,\n      axios_error: cb_error,\n    });\n  };\n\n  useEffect(() => {\n    // console.log(didMyChatListMount);\n    if (didMyChatListMount) {\n      get_chat_list();\n      get_isread();\n      setDidMyChatListMount(false);\n    } else {\n      setIsreadLoading(false);\n      setChatListLoading(false);\n    }\n  }, [ischange]);\n\n  useEffect(() => {\n    socket.on(\"new_msg\", (data) => {\n      // console.log(data);\n\n      settempIsread(data);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (tempIsread.length !== 0) {\n      console.log(\"tempisread=\", tempIsread);\n      console.log(\"isread=\", isRead);\n\n      const is_read_index = isRead.findIndex(\n        (x) => x.user === tempIsread.from.userid\n      );\n      console.log(\"is-read-index=\", is_read_index);\n      if (is_read_index !== -1) {\n        if (isRead[is_read_index].isread[0] === true) {\n          isRead[is_read_index].isread.splice(0, 1);\n        }\n        isRead[is_read_index].isread.push(false);\n      } else {\n        isRead.push({ user: tempIsread.from.userid, isread: [false] });\n      }\n      setIsRead(isRead);\n\n      const check = myChatList.findIndex(\n        (x) => x.user._id === tempIsread.from.userid\n      );\n      console.log(\"check=\", check);\n      console.log(myChatList);\n      if (check !== -1) {\n        myChatList[check].last_msg = new Date().toISOString();\n      } else {\n        myChatList.push({\n          last_msg: new Date().toISOString(),\n          user: {\n            fname: tempIsread.from.fname,\n            lname: tempIsread.from.lname,\n            username: tempIsread.from.username,\n            _id: tempIsread.from.userid,\n          },\n        });\n      }\n\n      const sort_arr = myChatList.sort((a, b) =>\n        b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0\n      );\n\n      setMyChatList(sort_arr);\n      setischange(!ischange);\n    }\n  }, [tempIsread]);\n\n  console.log(myChatList);\n  // console.log(isRead);\n  return (\n    <div className=\"ChatList\">\n      {chatListLoading && isreadLoading && (\n        <div className=\"loading-container\">\n          <div className=\"spinner-border loading\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      )}\n      {!chatListLoading &&\n        !isreadLoading &&\n        (myChatList.length === 0 ? (\n          <div className=\"empty-chatlist\">\n            Please start a conversation with someone to see it here.\n          </div>\n        ) : (\n          myChatList.map((value, index) => (\n            <ChatListCard\n              value={value}\n              index={index}\n              key={uniqid()}\n              isRead={isRead}\n            />\n          ))\n        ))}\n    </div>\n  );\n};\n\nexport default ChatList;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatListCard.js",["441","442"],"import { min } from \"moment\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatListCard = ({ value, index, isRead }) => {\n  let no_unread_msgs;\n  for (let i = 0; i < isRead.length; i++) {\n    if (isRead[i].user === value.user._id) {\n      if (isRead[i].isread[0] == true) {\n        break;\n      } else {\n        no_unread_msgs = isRead[i].isread.length;\n      }\n    }\n  }\n\n  // console.log(isRead);\n\n  const minute = new Date(value.last_msg).getMinutes();\n  const hour = new Date(value.last_msg).getHours();\n  const date = new Date(value.last_msg).getDate();\n  const month = new Date(value.last_msg).getMonth() + 1;\n  const year = new Date(value.last_msg).getFullYear();\n  const splityear = [...year.toString()];\n\n  return (\n    <div className=\"ChatListCard\">\n      <Link\n        to={{\n          pathname: \"/chat\",\n          state: {\n            userid: value.user._id,\n            fname: value.user.fname,\n            lname: value.user.lname,\n            username: value.user.username,\n          },\n        }}\n      >\n        <div className=\"profile-picture\">\n          {[...value.user.fname][0].toLowerCase()}\n        </div>\n        <div className=\"name\">\n          <div>\n            <span>{value.user.fname} </span>\n            <span>{value.user.lname} </span>\n          </div>\n        </div>\n        <div className=\"read-container\">\n          <div className=\"read\">\n            <div className={no_unread_msgs ? \"show-read isread\" : \"show-read\"}>\n              {no_unread_msgs || \"\"}\n            </div>\n          </div>\n          <div className=\"date-container\">\n            <div className=\"date\">\n              <span>{date}/</span>\n\n              <span>{month}/</span>\n\n              <span>{splityear[2]}</span>\n              <span>{splityear[3]}</span>\n            </div>\n\n            <div className=\"time\">\n              <span>{hour > 12 ? hour - 12 : hour === 0 ? 12 : hour}:</span>\n\n              <span>{minute < 10 ? \"0\" + minute : minute}</span>\n              <span>{hour > 12 ? \"pm\" : \"am\"}</span>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default ChatListCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/WelcomeMsg/WelcomeMsg.js",[],{"ruleId":"443","replacedBy":"444"},{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","severity":1,"message":"448","line":3,"column":10,"nodeType":"449","messageId":"450","endLine":3,"endColumn":20},{"ruleId":"447","severity":1,"message":"451","line":4,"column":10,"nodeType":"449","messageId":"450","endLine":4,"endColumn":25},{"ruleId":"447","severity":1,"message":"452","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":13},{"ruleId":"447","severity":1,"message":"453","line":3,"column":8,"nodeType":"449","messageId":"450","endLine":3,"endColumn":13},{"ruleId":"447","severity":1,"message":"454","line":5,"column":10,"nodeType":"449","messageId":"450","endLine":5,"endColumn":16},{"ruleId":"447","severity":1,"message":"455","line":5,"column":18,"nodeType":"449","messageId":"450","endLine":5,"endColumn":29},{"ruleId":"447","severity":1,"message":"456","line":7,"column":10,"nodeType":"449","messageId":"450","endLine":7,"endColumn":15},{"ruleId":"457","severity":1,"message":"458","line":144,"column":35,"nodeType":"459","messageId":"460","endLine":144,"endColumn":37},{"ruleId":"461","severity":1,"message":"462","line":167,"column":6,"nodeType":"463","endLine":167,"endColumn":8,"suggestions":"464"},{"ruleId":"447","severity":1,"message":"465","line":8,"column":3,"nodeType":"449","messageId":"450","endLine":8,"endColumn":12},{"ruleId":"447","severity":1,"message":"466","line":10,"column":8,"nodeType":"449","messageId":"450","endLine":10,"endColumn":20},{"ruleId":"447","severity":1,"message":"467","line":11,"column":8,"nodeType":"449","messageId":"450","endLine":11,"endColumn":18},{"ruleId":"447","severity":1,"message":"468","line":12,"column":8,"nodeType":"449","messageId":"450","endLine":12,"endColumn":20},{"ruleId":"447","severity":1,"message":"469","line":14,"column":8,"nodeType":"449","messageId":"450","endLine":14,"endColumn":20},{"ruleId":"447","severity":1,"message":"470","line":15,"column":8,"nodeType":"449","messageId":"450","endLine":15,"endColumn":16},{"ruleId":"447","severity":1,"message":"471","line":16,"column":8,"nodeType":"449","messageId":"450","endLine":16,"endColumn":18},{"ruleId":"447","severity":1,"message":"472","line":26,"column":8,"nodeType":"449","messageId":"450","endLine":26,"endColumn":17},{"ruleId":"447","severity":1,"message":"473","line":33,"column":8,"nodeType":"449","messageId":"450","endLine":33,"endColumn":18},{"ruleId":"447","severity":1,"message":"474","line":40,"column":24,"nodeType":"449","messageId":"450","endLine":40,"endColumn":31},{"ruleId":"447","severity":1,"message":"475","line":41,"column":18,"nodeType":"449","messageId":"450","endLine":41,"endColumn":27},{"ruleId":"447","severity":1,"message":"476","line":44,"column":9,"nodeType":"449","messageId":"450","endLine":44,"endColumn":16},{"ruleId":"447","severity":1,"message":"477","line":1,"column":29,"nodeType":"449","messageId":"450","endLine":1,"endColumn":38},{"ruleId":"447","severity":1,"message":"478","line":9,"column":10,"nodeType":"449","messageId":"450","endLine":9,"endColumn":16},{"ruleId":"447","severity":1,"message":"475","line":9,"column":18,"nodeType":"449","messageId":"450","endLine":9,"endColumn":27},{"ruleId":"447","severity":1,"message":"476","line":63,"column":9,"nodeType":"449","messageId":"450","endLine":63,"endColumn":16},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"480","line":14,"column":9,"nodeType":"449","messageId":"450","endLine":14,"endColumn":14},{"ruleId":"447","severity":1,"message":"481","line":15,"column":9,"nodeType":"449","messageId":"450","endLine":15,"endColumn":17},{"ruleId":"461","severity":1,"message":"482","line":18,"column":6,"nodeType":"463","endLine":18,"endColumn":8,"suggestions":"483"},{"ruleId":"447","severity":1,"message":"448","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":27},{"ruleId":"447","severity":1,"message":"477","line":1,"column":29,"nodeType":"449","messageId":"450","endLine":1,"endColumn":38},{"ruleId":"447","severity":1,"message":"479","line":1,"column":40,"nodeType":"449","messageId":"450","endLine":1,"endColumn":48},{"ruleId":"447","severity":1,"message":"451","line":3,"column":10,"nodeType":"449","messageId":"450","endLine":3,"endColumn":25},{"ruleId":"447","severity":1,"message":"465","line":4,"column":10,"nodeType":"449","messageId":"450","endLine":4,"endColumn":19},{"ruleId":"447","severity":1,"message":"476","line":25,"column":9,"nodeType":"449","messageId":"450","endLine":25,"endColumn":16},{"ruleId":"461","severity":1,"message":"484","line":35,"column":6,"nodeType":"463","endLine":35,"endColumn":8,"suggestions":"485"},{"ruleId":"461","severity":1,"message":"482","line":21,"column":6,"nodeType":"463","endLine":21,"endColumn":8,"suggestions":"486"},{"ruleId":"443","replacedBy":"487"},{"ruleId":"445","replacedBy":"488"},{"ruleId":"447","severity":1,"message":"489","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":18},{"ruleId":"447","severity":1,"message":"490","line":2,"column":20,"nodeType":"449","messageId":"450","endLine":2,"endColumn":30},{"ruleId":"447","severity":1,"message":"465","line":2,"column":32,"nodeType":"449","messageId":"450","endLine":2,"endColumn":41},{"ruleId":"447","severity":1,"message":"491","line":25,"column":9,"nodeType":"449","messageId":"450","endLine":25,"endColumn":15},{"ruleId":"447","severity":1,"message":"476","line":27,"column":9,"nodeType":"449","messageId":"450","endLine":27,"endColumn":16},{"ruleId":"461","severity":1,"message":"492","line":10,"column":6,"nodeType":"463","endLine":10,"endColumn":14,"suggestions":"493"},{"ruleId":"447","severity":1,"message":"494","line":1,"column":10,"nodeType":"449","messageId":"450","endLine":1,"endColumn":22},{"ruleId":"447","severity":1,"message":"479","line":2,"column":37,"nodeType":"449","messageId":"450","endLine":2,"endColumn":45},{"ruleId":"447","severity":1,"message":"495","line":3,"column":10,"nodeType":"449","messageId":"450","endLine":3,"endColumn":14},{"ruleId":"447","severity":1,"message":"489","line":3,"column":16,"nodeType":"449","messageId":"450","endLine":3,"endColumn":24},{"ruleId":"447","severity":1,"message":"465","line":3,"column":38,"nodeType":"449","messageId":"450","endLine":3,"endColumn":47},{"ruleId":"447","severity":1,"message":"496","line":9,"column":10,"nodeType":"449","messageId":"450","endLine":9,"endColumn":27},{"ruleId":"447","severity":1,"message":"490","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":20},{"ruleId":"447","severity":1,"message":"495","line":2,"column":33,"nodeType":"449","messageId":"450","endLine":2,"endColumn":37},{"ruleId":"447","severity":1,"message":"497","line":6,"column":8,"nodeType":"449","messageId":"450","endLine":6,"endColumn":13},{"ruleId":"461","severity":1,"message":"498","line":68,"column":6,"nodeType":"463","endLine":68,"endColumn":25,"suggestions":"499"},{"ruleId":"461","severity":1,"message":"500","line":81,"column":6,"nodeType":"463","endLine":81,"endColumn":8,"suggestions":"501"},{"ruleId":"457","severity":1,"message":"458","line":93,"column":27,"nodeType":"459","messageId":"460","endLine":93,"endColumn":29},{"ruleId":"447","severity":1,"message":"502","line":4,"column":20,"nodeType":"449","messageId":"450","endLine":4,"endColumn":26},{"ruleId":"447","severity":1,"message":"503","line":6,"column":8,"nodeType":"449","messageId":"450","endLine":6,"endColumn":14},{"ruleId":"447","severity":1,"message":"504","line":29,"column":10,"nodeType":"449","messageId":"450","endLine":29,"endColumn":19},{"ruleId":"447","severity":1,"message":"505","line":29,"column":21,"nodeType":"449","messageId":"450","endLine":29,"endColumn":33},{"ruleId":"457","severity":1,"message":"458","line":64,"column":12,"nodeType":"459","messageId":"460","endLine":64,"endColumn":14},{"ruleId":"447","severity":1,"message":"491","line":70,"column":9,"nodeType":"449","messageId":"450","endLine":70,"endColumn":15},{"ruleId":"457","severity":1,"message":"458","line":75,"column":14,"nodeType":"459","messageId":"460","endLine":75,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":87,"column":16,"nodeType":"459","messageId":"460","endLine":87,"endColumn":18},{"ruleId":"457","severity":1,"message":"458","line":113,"column":14,"nodeType":"459","messageId":"460","endLine":113,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":130,"column":21,"nodeType":"459","messageId":"460","endLine":130,"endColumn":23},{"ruleId":"461","severity":1,"message":"506","line":143,"column":6,"nodeType":"463","endLine":143,"endColumn":25,"suggestions":"507"},{"ruleId":"461","severity":1,"message":"508","line":233,"column":6,"nodeType":"463","endLine":233,"endColumn":8,"suggestions":"509"},{"ruleId":"457","severity":1,"message":"458","line":235,"column":26,"nodeType":"459","messageId":"460","endLine":235,"endColumn":28},{"ruleId":"457","severity":1,"message":"458","line":287,"column":28,"nodeType":"459","messageId":"460","endLine":287,"endColumn":30},{"ruleId":"457","severity":1,"message":"458","line":289,"column":23,"nodeType":"459","messageId":"460","endLine":289,"endColumn":25},{"ruleId":"447","severity":1,"message":"510","line":22,"column":10,"nodeType":"449","messageId":"450","endLine":22,"endColumn":15},{"ruleId":"447","severity":1,"message":"511","line":22,"column":17,"nodeType":"449","messageId":"450","endLine":22,"endColumn":25},{"ruleId":"447","severity":1,"message":"512","line":26,"column":9,"nodeType":"449","messageId":"450","endLine":26,"endColumn":14},{"ruleId":"447","severity":1,"message":"480","line":27,"column":9,"nodeType":"449","messageId":"450","endLine":27,"endColumn":14},{"ruleId":"447","severity":1,"message":"481","line":28,"column":9,"nodeType":"449","messageId":"450","endLine":28,"endColumn":17},{"ruleId":"461","severity":1,"message":"513","line":73,"column":6,"nodeType":"463","endLine":73,"endColumn":25,"suggestions":"514"},{"ruleId":"461","severity":1,"message":"515","line":98,"column":6,"nodeType":"463","endLine":98,"endColumn":14,"suggestions":"516"},{"ruleId":"457","severity":1,"message":"458","line":106,"column":17,"nodeType":"459","messageId":"460","endLine":106,"endColumn":19},{"ruleId":"447","severity":1,"message":"497","line":1,"column":8,"nodeType":"449","messageId":"450","endLine":1,"endColumn":13},{"ruleId":"447","severity":1,"message":"495","line":3,"column":23,"nodeType":"449","messageId":"450","endLine":3,"endColumn":27},{"ruleId":"447","severity":1,"message":"465","line":3,"column":29,"nodeType":"449","messageId":"450","endLine":3,"endColumn":38},{"ruleId":"447","severity":1,"message":"490","line":3,"column":40,"nodeType":"449","messageId":"450","endLine":3,"endColumn":50},{"ruleId":"447","severity":1,"message":"453","line":8,"column":8,"nodeType":"449","messageId":"450","endLine":8,"endColumn":13},{"ruleId":"447","severity":1,"message":"517","line":27,"column":7,"nodeType":"449","messageId":"450","endLine":27,"endColumn":15},{"ruleId":"457","severity":1,"message":"518","line":31,"column":12,"nodeType":"459","messageId":"460","endLine":31,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":45,"column":14,"nodeType":"459","messageId":"460","endLine":45,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":60,"column":16,"nodeType":"459","messageId":"460","endLine":60,"endColumn":18},{"ruleId":"457","severity":1,"message":"458","line":63,"column":20,"nodeType":"459","messageId":"460","endLine":63,"endColumn":22},{"ruleId":"457","severity":1,"message":"458","line":85,"column":14,"nodeType":"459","messageId":"460","endLine":85,"endColumn":16},{"ruleId":"461","severity":1,"message":"519","line":108,"column":6,"nodeType":"463","endLine":108,"endColumn":25,"suggestions":"520"},{"ruleId":"461","severity":1,"message":"482","line":22,"column":6,"nodeType":"463","endLine":22,"endColumn":8,"suggestions":"521"},{"ruleId":"447","severity":1,"message":"522","line":45,"column":9,"nodeType":"449","messageId":"450","endLine":45,"endColumn":22},{"ruleId":"461","severity":1,"message":"482","line":18,"column":6,"nodeType":"463","endLine":18,"endColumn":8,"suggestions":"523"},{"ruleId":"447","severity":1,"message":"490","line":2,"column":16,"nodeType":"449","messageId":"450","endLine":2,"endColumn":26},{"ruleId":"447","severity":1,"message":"455","line":2,"column":28,"nodeType":"449","messageId":"450","endLine":2,"endColumn":39},{"ruleId":"447","severity":1,"message":"465","line":2,"column":41,"nodeType":"449","messageId":"450","endLine":2,"endColumn":50},{"ruleId":"447","severity":1,"message":"524","line":22,"column":10,"nodeType":"449","messageId":"450","endLine":22,"endColumn":24},{"ruleId":"447","severity":1,"message":"525","line":22,"column":26,"nodeType":"449","messageId":"450","endLine":22,"endColumn":43},{"ruleId":"457","severity":1,"message":"458","line":60,"column":21,"nodeType":"459","messageId":"460","endLine":60,"endColumn":23},{"ruleId":"457","severity":1,"message":"458","line":60,"column":39,"nodeType":"459","messageId":"460","endLine":60,"endColumn":41},{"ruleId":"457","severity":1,"message":"458","line":70,"column":28,"nodeType":"459","messageId":"460","endLine":70,"endColumn":30},{"ruleId":"457","severity":1,"message":"458","line":72,"column":29,"nodeType":"459","messageId":"460","endLine":72,"endColumn":31},{"ruleId":"461","severity":1,"message":"526","line":97,"column":6,"nodeType":"463","endLine":97,"endColumn":8,"suggestions":"527"},{"ruleId":"457","severity":1,"message":"458","line":130,"column":20,"nodeType":"459","messageId":"460","endLine":130,"endColumn":22},{"ruleId":"457","severity":1,"message":"458","line":146,"column":25,"nodeType":"459","messageId":"460","endLine":146,"endColumn":27},{"ruleId":"447","severity":1,"message":"528","line":1,"column":10,"nodeType":"449","messageId":"450","endLine":1,"endColumn":16},{"ruleId":"447","severity":1,"message":"529","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":13},{"ruleId":"447","severity":1,"message":"490","line":4,"column":16,"nodeType":"449","messageId":"450","endLine":4,"endColumn":26},{"ruleId":"447","severity":1,"message":"455","line":4,"column":28,"nodeType":"449","messageId":"450","endLine":4,"endColumn":39},{"ruleId":"447","severity":1,"message":"465","line":4,"column":41,"nodeType":"449","messageId":"450","endLine":4,"endColumn":50},{"ruleId":"447","severity":1,"message":"525","line":21,"column":26,"nodeType":"449","messageId":"450","endLine":21,"endColumn":43},{"ruleId":"457","severity":1,"message":"458","line":48,"column":26,"nodeType":"459","messageId":"460","endLine":48,"endColumn":28},{"ruleId":"457","severity":1,"message":"458","line":50,"column":27,"nodeType":"459","messageId":"460","endLine":50,"endColumn":29},{"ruleId":"461","severity":1,"message":"526","line":73,"column":6,"nodeType":"463","endLine":73,"endColumn":8,"suggestions":"530"},{"ruleId":"447","severity":1,"message":"529","line":1,"column":10,"nodeType":"449","messageId":"450","endLine":1,"endColumn":13},{"ruleId":"447","severity":1,"message":"448","line":2,"column":17,"nodeType":"449","messageId":"450","endLine":2,"endColumn":27},{"ruleId":"447","severity":1,"message":"479","line":2,"column":40,"nodeType":"449","messageId":"450","endLine":2,"endColumn":48},{"ruleId":"447","severity":1,"message":"490","line":3,"column":16,"nodeType":"449","messageId":"450","endLine":3,"endColumn":26},{"ruleId":"447","severity":1,"message":"455","line":3,"column":28,"nodeType":"449","messageId":"450","endLine":3,"endColumn":39},{"ruleId":"447","severity":1,"message":"465","line":3,"column":41,"nodeType":"449","messageId":"450","endLine":3,"endColumn":50},{"ruleId":"447","severity":1,"message":"451","line":4,"column":10,"nodeType":"449","messageId":"450","endLine":4,"endColumn":25},{"ruleId":"443","replacedBy":"531"},{"ruleId":"445","replacedBy":"532"},{"ruleId":"447","severity":1,"message":"533","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":28},{"ruleId":"447","severity":1,"message":"534","line":31,"column":10,"nodeType":"449","messageId":"450","endLine":31,"endColumn":19},{"ruleId":"457","severity":1,"message":"458","line":49,"column":12,"nodeType":"459","messageId":"460","endLine":49,"endColumn":14},{"ruleId":"447","severity":1,"message":"535","line":53,"column":5,"nodeType":"449","messageId":"450","endLine":53,"endColumn":11},{"ruleId":"461","severity":1,"message":"536","line":121,"column":6,"nodeType":"463","endLine":121,"endColumn":8,"suggestions":"537"},{"ruleId":"461","severity":1,"message":"538","line":134,"column":6,"nodeType":"463","endLine":134,"endColumn":47,"suggestions":"539"},{"ruleId":"457","severity":1,"message":"458","line":174,"column":38,"nodeType":"459","messageId":"460","endLine":174,"endColumn":40},{"ruleId":"457","severity":1,"message":"458","line":185,"column":53,"nodeType":"459","messageId":"460","endLine":185,"endColumn":55},{"ruleId":"457","severity":1,"message":"458","line":191,"column":33,"nodeType":"459","messageId":"460","endLine":191,"endColumn":35},{"ruleId":"457","severity":1,"message":"458","line":243,"column":35,"nodeType":"459","messageId":"460","endLine":243,"endColumn":37},{"ruleId":"457","severity":1,"message":"458","line":262,"column":34,"nodeType":"459","messageId":"460","endLine":262,"endColumn":36},{"ruleId":"457","severity":1,"message":"458","line":298,"column":41,"nodeType":"459","messageId":"460","endLine":298,"endColumn":43},{"ruleId":"457","severity":1,"message":"458","line":305,"column":49,"nodeType":"459","messageId":"460","endLine":305,"endColumn":51},{"ruleId":"447","severity":1,"message":"477","line":1,"column":29,"nodeType":"449","messageId":"450","endLine":1,"endColumn":38},{"ruleId":"447","severity":1,"message":"465","line":3,"column":29,"nodeType":"449","messageId":"450","endLine":3,"endColumn":38},{"ruleId":"447","severity":1,"message":"540","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":21},{"ruleId":"447","severity":1,"message":"535","line":31,"column":5,"nodeType":"449","messageId":"450","endLine":31,"endColumn":11},{"ruleId":"447","severity":1,"message":"541","line":37,"column":10,"nodeType":"449","messageId":"450","endLine":37,"endColumn":28},{"ruleId":"447","severity":1,"message":"542","line":37,"column":30,"nodeType":"449","messageId":"450","endLine":37,"endColumn":51},{"ruleId":"457","severity":1,"message":"458","line":47,"column":19,"nodeType":"459","messageId":"460","endLine":47,"endColumn":21},{"ruleId":"457","severity":1,"message":"458","line":48,"column":18,"nodeType":"459","messageId":"460","endLine":48,"endColumn":20},{"ruleId":"457","severity":1,"message":"458","line":79,"column":34,"nodeType":"459","messageId":"460","endLine":79,"endColumn":36},{"ruleId":"457","severity":1,"message":"458","line":88,"column":49,"nodeType":"459","messageId":"460","endLine":88,"endColumn":51},{"ruleId":"447","severity":1,"message":"497","line":1,"column":8,"nodeType":"449","messageId":"450","endLine":1,"endColumn":13},{"ruleId":"447","severity":1,"message":"543","line":19,"column":10,"nodeType":"449","messageId":"450","endLine":19,"endColumn":15},{"ruleId":"461","severity":1,"message":"544","line":85,"column":6,"nodeType":"463","endLine":85,"endColumn":8,"suggestions":"545"},{"ruleId":"457","severity":1,"message":"458","line":38,"column":26,"nodeType":"459","messageId":"460","endLine":38,"endColumn":28},{"ruleId":"457","severity":1,"message":"458","line":40,"column":27,"nodeType":"459","messageId":"460","endLine":40,"endColumn":29},{"ruleId":"461","severity":1,"message":"526","line":62,"column":6,"nodeType":"463","endLine":62,"endColumn":8,"suggestions":"546"},{"ruleId":"457","severity":1,"message":"458","line":109,"column":42,"nodeType":"459","messageId":"460","endLine":109,"endColumn":44},{"ruleId":"447","severity":1,"message":"547","line":25,"column":10,"nodeType":"449","messageId":"450","endLine":25,"endColumn":21},{"ruleId":"447","severity":1,"message":"543","line":27,"column":10,"nodeType":"449","messageId":"450","endLine":27,"endColumn":15},{"ruleId":"447","severity":1,"message":"548","line":58,"column":9,"nodeType":"449","messageId":"450","endLine":58,"endColumn":22},{"ruleId":"461","severity":1,"message":"482","line":64,"column":6,"nodeType":"463","endLine":64,"endColumn":8,"suggestions":"549"},{"ruleId":"447","severity":1,"message":"455","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":21},{"ruleId":"447","severity":1,"message":"550","line":17,"column":25,"nodeType":"449","messageId":"450","endLine":17,"endColumn":45},{"ruleId":"457","severity":1,"message":"458","line":57,"column":25,"nodeType":"459","messageId":"460","endLine":57,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":69,"column":29,"nodeType":"459","messageId":"460","endLine":69,"endColumn":31},{"ruleId":"457","severity":1,"message":"458","line":69,"column":53,"nodeType":"459","messageId":"460","endLine":69,"endColumn":55},{"ruleId":"457","severity":1,"message":"458","line":97,"column":21,"nodeType":"459","messageId":"460","endLine":97,"endColumn":23},{"ruleId":"457","severity":1,"message":"458","line":97,"column":42,"nodeType":"459","messageId":"460","endLine":97,"endColumn":44},{"ruleId":"457","severity":1,"message":"458","line":114,"column":20,"nodeType":"459","messageId":"460","endLine":114,"endColumn":22},{"ruleId":"461","severity":1,"message":"551","line":124,"column":6,"nodeType":"463","endLine":124,"endColumn":8,"suggestions":"552"},{"ruleId":"457","severity":1,"message":"518","line":139,"column":25,"nodeType":"459","messageId":"460","endLine":139,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":144,"column":25,"nodeType":"459","messageId":"460","endLine":144,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":154,"column":37,"nodeType":"459","messageId":"460","endLine":154,"endColumn":39},{"ruleId":"457","severity":1,"message":"458","line":154,"column":57,"nodeType":"459","messageId":"460","endLine":154,"endColumn":59},{"ruleId":"457","severity":1,"message":"458","line":158,"column":22,"nodeType":"459","messageId":"460","endLine":158,"endColumn":24},{"ruleId":"457","severity":1,"message":"458","line":162,"column":27,"nodeType":"459","messageId":"460","endLine":162,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":162,"column":47,"nodeType":"459","messageId":"460","endLine":162,"endColumn":49},{"ruleId":"457","severity":1,"message":"458","line":167,"column":25,"nodeType":"459","messageId":"460","endLine":167,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":167,"column":44,"nodeType":"459","messageId":"460","endLine":167,"endColumn":46},{"ruleId":"457","severity":1,"message":"458","line":178,"column":25,"nodeType":"459","messageId":"460","endLine":178,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":178,"column":44,"nodeType":"459","messageId":"460","endLine":178,"endColumn":46},{"ruleId":"457","severity":1,"message":"458","line":188,"column":25,"nodeType":"459","messageId":"460","endLine":188,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":188,"column":44,"nodeType":"459","messageId":"460","endLine":188,"endColumn":46},{"ruleId":"457","severity":1,"message":"458","line":206,"column":25,"nodeType":"459","messageId":"460","endLine":206,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":232,"column":49,"nodeType":"459","messageId":"460","endLine":232,"endColumn":51},{"ruleId":"457","severity":1,"message":"458","line":239,"column":33,"nodeType":"459","messageId":"460","endLine":239,"endColumn":35},{"ruleId":"457","severity":1,"message":"458","line":239,"column":54,"nodeType":"459","messageId":"460","endLine":239,"endColumn":56},{"ruleId":"457","severity":1,"message":"458","line":256,"column":28,"nodeType":"459","messageId":"460","endLine":256,"endColumn":30},{"ruleId":"447","severity":1,"message":"497","line":1,"column":8,"nodeType":"449","messageId":"450","endLine":1,"endColumn":13},{"ruleId":"447","severity":1,"message":"553","line":4,"column":8,"nodeType":"449","messageId":"450","endLine":4,"endColumn":22},{"ruleId":"447","severity":1,"message":"554","line":4,"column":26,"nodeType":"449","messageId":"450","endLine":4,"endColumn":28},{"ruleId":"461","severity":1,"message":"555","line":44,"column":6,"nodeType":"463","endLine":44,"endColumn":14,"suggestions":"556"},{"ruleId":"461","severity":1,"message":"557","line":51,"column":6,"nodeType":"463","endLine":51,"endColumn":20,"suggestions":"558"},{"ruleId":"461","severity":1,"message":"559","line":63,"column":6,"nodeType":"463","endLine":63,"endColumn":8,"suggestions":"560"},{"ruleId":"461","severity":1,"message":"561","line":149,"column":6,"nodeType":"463","endLine":149,"endColumn":37,"suggestions":"562"},{"ruleId":"447","severity":1,"message":"479","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"477","line":1,"column":27,"nodeType":"449","messageId":"450","endLine":1,"endColumn":36},{"ruleId":"447","severity":1,"message":"497","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":13},{"ruleId":"447","severity":1,"message":"477","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"458","line":19,"column":39,"nodeType":"459","messageId":"460","endLine":19,"endColumn":41},{"ruleId":"457","severity":1,"message":"458","line":21,"column":38,"nodeType":"459","messageId":"460","endLine":21,"endColumn":40},{"ruleId":"457","severity":1,"message":"458","line":24,"column":41,"nodeType":"459","messageId":"460","endLine":24,"endColumn":43},{"ruleId":"447","severity":1,"message":"494","line":1,"column":10,"nodeType":"449","messageId":"450","endLine":1,"endColumn":22},{"ruleId":"447","severity":1,"message":"563","line":6,"column":8,"nodeType":"449","messageId":"450","endLine":6,"endColumn":31},{"ruleId":"447","severity":1,"message":"564","line":26,"column":10,"nodeType":"449","messageId":"450","endLine":26,"endColumn":17},{"ruleId":"447","severity":1,"message":"565","line":26,"column":19,"nodeType":"449","messageId":"450","endLine":26,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":54,"column":18,"nodeType":"459","messageId":"460","endLine":54,"endColumn":20},{"ruleId":"461","severity":1,"message":"566","line":102,"column":6,"nodeType":"463","endLine":102,"endColumn":8,"suggestions":"567"},{"ruleId":"457","severity":1,"message":"458","line":107,"column":28,"nodeType":"459","messageId":"460","endLine":107,"endColumn":30},{"ruleId":"461","severity":1,"message":"568","line":122,"column":6,"nodeType":"463","endLine":122,"endColumn":36,"suggestions":"569"},{"ruleId":"461","severity":1,"message":"570","line":42,"column":6,"nodeType":"463","endLine":42,"endColumn":8,"suggestions":"571"},{"ruleId":"447","severity":1,"message":"553","line":6,"column":8,"nodeType":"449","messageId":"450","endLine":6,"endColumn":22},{"ruleId":"447","severity":1,"message":"572","line":7,"column":7,"nodeType":"449","messageId":"450","endLine":7,"endColumn":15},{"ruleId":"447","severity":1,"message":"474","line":12,"column":5,"nodeType":"449","messageId":"450","endLine":12,"endColumn":12},{"ruleId":"461","severity":1,"message":"573","line":104,"column":6,"nodeType":"463","endLine":104,"endColumn":16,"suggestions":"574"},{"ruleId":"461","severity":1,"message":"575","line":159,"column":6,"nodeType":"463","endLine":159,"endColumn":18,"suggestions":"576"},{"ruleId":"447","severity":1,"message":"577","line":1,"column":10,"nodeType":"449","messageId":"450","endLine":1,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":9,"column":31,"nodeType":"459","messageId":"460","endLine":9,"endColumn":33},"no-native-reassign",["578"],"no-negated-in-lhs",["579"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'OdinBookContext' is defined but never used.","'Login' is defined but never used.","'async' is defined but never used.","'Switch' is defined but never used.","'useLocation' is defined but never used.","'query' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLogin', 'jwtData', and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["580"],"'useParams' is defined but never used.","'MyPostUpdate' is defined but never used.","'MyPostList' is defined but never used.","'MyPostCreate' is defined but never used.","'MyPostDelete' is defined but never used.","'NewsFeed' is defined but never used.","'PostDetail' is defined but never used.","'MyFriends' is defined but never used.","'WelcomeMsg' is defined but never used.","'jwtData' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'isAuth' is assigned a value but never used.","'useState' is defined but never used.","'lname' is assigned a value but never used.","'username' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'make_server_request'. Either include it or remove the dependency array.",["581"],"React Hook useEffect has a missing dependency: 'update_value'. Either include it or remove the dependency array.",["582"],["583"],["578"],["579"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array.",["584"],"'concatSeries' is defined but never used.","'Link' is defined but never used.","'searchValueChange' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'make_server_request' and 'setSearchValueChange'. Either include them or remove the dependency array.",["585"],"React Hook useEffect has missing dependencies: 'make_server_request', 'params', and 'searchValueChange'. Either include them or remove the dependency array.",["586"],"'Router' is defined but never used.","'moment' is defined but never used.","'myFriends' is assigned a value but never used.","'setMyFriends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didMyNewsFeedMount', 'didMyPostsMount', 'get_posts', 'jwtData.sub', 'myNewsfeed', 'myPosts', 'path', 'setDidMyNewsFeedMount', 'setDidMyPostsMount', and 'userid'. Either include them or remove the dependency array.",["587"],"React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["588"],"'about' is assigned a value but never used.","'setAbout' is assigned a value but never used.","'fname' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didMyAboutMount', 'jwtData.sub', 'make_server_request', 'myAbout', 'setdidMyAboutMount', and 'userid'. Either include them or remove the dependency array.",["589"],"React Hook useEffect has a missing dependency: 'g'. Either include it or remove the dependency array.",["590"],"'username' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'didMyFriendsMount', 'jwtData.sub', 'make_server_request', 'myFriends', 'path', 'setDidMyFriendsMount', and 'userid'. Either include them or remove the dependency array.",["591"],["592"],"'display_posts' is assigned a value but never used.",["593"],"'myFriendsIndex' is assigned a value but never used.","'setMyFriendsIndex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'friendBtn', 'index', 'myFriends', 'pp', 'setFriendBtn', and 'value.username'. Either include them or remove the dependency array. If 'setFriendBtn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["594"],"'Result' is defined but never used.","'set' is defined but never used.",["595"],["578"],["579"],"'useCallback' is defined but never used.","'cardError' is assigned a value but never used.","'userid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'g', 'likeClick', 'likeLength', 'postsLength', 'pp', 'setLikeClick', 'setLikeLength', and 'value.like.length'. Either include them or remove the dependency array. If 'setLikeClick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["596"],"React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["597"],"'CommentUpdate' is defined but never used.","'commentUpdateClick' is assigned a value but never used.","'setCommentUpdateClick' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didMyFriendsMount', 'get_myfriends', 'get_users_liked', and 'setDidMyFriendsMount'. Either include them or remove the dependency array.",["598"],["599"],"'postLoading' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.",["600"],"'didMyAboutMountValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clickIndex', 'index', and 'objkey'. Either include them or remove the dependency array.",["601"],"'socketIOClient' is defined but never used.","'io' is defined but never used.","React Hook useEffect has a missing dependency: 'tempResponse'. Either include it or remove the dependency array. You can also do a functional update 'setTempResponse(t => ...)' if you only need 'tempResponse' in the 'setTempResponse' call.",["602"],"React Hook useEffect has a missing dependency: 'msgArr'. Either include it or remove the dependency array. You can also do a functional update 'setMsgArr(m => ...)' if you only need 'msgArr' in the 'setMsgArr' call.",["603"],"React Hook useEffect has missing dependencies: 'get_my_messages', 'get_responses', and 'save_isreadtrue'. Either include them or remove the dependency array.",["604"],"React Hook useEffect has missing dependencies: 'myMsg' and 'response'. Either include them or remove the dependency array.",["605"],"'UserDetailFriendBtnCard' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didMyFriendsMount', 'get_friend', and 'setDidMyFriendsMount'. Either include them or remove the dependency array.",["606"],"React Hook useEffect has a missing dependency: 'check'. Either include it or remove the dependency array.",["607"],"React Hook useEffect has missing dependencies: 'index', 'isFriend', 'setIsFriend', 'userid', and 'value._id'. Either include them or remove the dependency array. If 'setIsFriend' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["608"],"'ENDPOINT' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didMyChatListMount', 'get_chat_list', 'get_isread', and 'setDidMyChatListMount'. Either include them or remove the dependency array.",["609"],"React Hook useEffect has missing dependencies: 'isRead', 'ischange', 'myChatList', 'setIsRead', and 'setMyChatList'. Either include them or remove the dependency array. You can also do a functional update 'setischange(i => ...)' if you only need 'ischange' in the 'setischange' call.",["610"],"'min' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"613","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"613","fix":"634"},{"desc":"613","fix":"635"},{"desc":"636","fix":"637"},{"desc":"636","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"636","fix":"645"},{"desc":"613","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},"Update the dependencies array to be: [isLogin, jwtData, loading]",{"range":"667","text":"668"},"Update the dependencies array to be: [make_server_request]",{"range":"669","text":"670"},"Update the dependencies array to be: [update_value]",{"range":"671","text":"672"},{"range":"673","text":"670"},"Update the dependencies array to be: [isAuth, setIsAuth]",{"range":"674","text":"675"},"Update the dependencies array to be: [make_server_request, searchValueChange, setSearchValueChange]",{"range":"676","text":"677"},"Update the dependencies array to be: [make_server_request, params, searchValueChange]",{"range":"678","text":"679"},"Update the dependencies array to be: [didMyNewsFeedMount, didMyPostsMount, get_posts, jwtData.sub, location.pathname, myNewsfeed, myPosts, path, setDidMyNewsFeedMount, setDidMyPostsMount, userid]",{"range":"680","text":"681"},"Update the dependencies array to be: [location.state]",{"range":"682","text":"683"},"Update the dependencies array to be: [didMyAboutMount, jwtData.sub, location.pathname, make_server_request, myAbout, setdidMyAboutMount, userid]",{"range":"684","text":"685"},"Update the dependencies array to be: [g, result]",{"range":"686","text":"687"},"Update the dependencies array to be: [didMyFriendsMount, jwtData.sub, location.pathname, make_server_request, myFriends, path, setDidMyFriendsMount, userid]",{"range":"688","text":"689"},{"range":"690","text":"670"},{"range":"691","text":"670"},"Update the dependencies array to be: [friendBtn, index, myFriends, pp, setFriendBtn, value.username]",{"range":"692","text":"693"},{"range":"694","text":"693"},"Update the dependencies array to be: [g, likeClick, likeLength, postsLength, pp, setLikeClick, setLikeLength, value.like.length]",{"range":"695","text":"696"},"Update the dependencies array to be: [pp, commentIconClicked, commentsLoading, index]",{"range":"697","text":"698"},"Update the dependencies array to be: [didMyFriendsMount, get_myfriends, get_users_liked, setDidMyFriendsMount]",{"range":"699","text":"700"},{"range":"701","text":"693"},{"range":"702","text":"670"},"Update the dependencies array to be: [clickIndex, index, objkey]",{"range":"703","text":"704"},"Update the dependencies array to be: [socket, tempResponse]",{"range":"705","text":"706"},"Update the dependencies array to be: [msgArr, tempResponse]",{"range":"707","text":"708"},"Update the dependencies array to be: [get_my_messages, get_responses, save_isreadtrue]",{"range":"709","text":"710"},"Update the dependencies array to be: [myMsg, mymsgloading, response, responseloading]",{"range":"711","text":"712"},"Update the dependencies array to be: [didMyFriendsMount, get_friend, setDidMyFriendsMount]",{"range":"713","text":"714"},"Update the dependencies array to be: [myFriends, location.pathname, check]",{"range":"715","text":"716"},"Update the dependencies array to be: [index, isFriend, setIsFriend, userid, value._id]",{"range":"717","text":"718"},"Update the dependencies array to be: [didMyChatListMount, get_chat_list, get_isread, ischange, setDidMyChatListMount]",{"range":"719","text":"720"},"Update the dependencies array to be: [isRead, ischange, myChatList, setIsRead, setMyChatList, tempIsread]",{"range":"721","text":"722"},[4825,4827],"[isLogin, jwtData, loading]",[534,536],"[make_server_request]",[913,915],"[update_value]",[600,602],[269,277],"[isAuth, setIsAuth]",[1765,1784],"[make_server_request, searchValueChange, setSearchValueChange]",[2178,2180],"[make_server_request, params, searchValueChange]",[4141,4160],"[didMyNewsFeedMount, didMyPostsMount, get_posts, jwtData.sub, location.pathname, myNewsfeed, myPosts, path, setDidMyNewsFeedMount, setDidMyPostsMount, userid]",[6795,6797],"[location.state]",[1897,1916],"[didMyAboutMount, jwtData.sub, location.pathname, make_server_request, myAbout, setdidMyAboutMount, userid]",[2369,2377],"[g, result]",[2916,2935],"[didMyFriendsMount, jwtData.sub, location.pathname, make_server_request, myFriends, path, setDidMyFriendsMount, userid]",[634,636],[544,546],[2557,2559],"[friendBtn, index, myFriends, pp, setFriendBtn, value.username]",[1754,1756],[3145,3147],"[g, likeClick, likeLength, postsLength, pp, setLikeClick, setLikeLength, value.like.length]",[3451,3492],"[pp, commentIconClicked, commentsLoading, index]",[2177,2179],"[didMyFriendsMount, get_myfriends, get_users_liked, setDidMyFriendsMount]",[1455,1457],[1451,1453],[2970,2972],"[clickIndex, index, objkey]",[1271,1279],"[socket, tempResponse]",[1421,1435],"[msgArr, tempResponse]",[1681,1683],"[get_my_messages, get_responses, save_isreadtrue]",[3784,3815],"[myMsg, mymsgloading, response, responseloading]",[2529,2531],"[didMyFriendsMount, get_friend, setDidMyFriendsMount]",[2871,2901],"[myFriends, location.pathname, check]",[865,867],"[index, isFriend, setIsFriend, userid, value._id]",[2607,2617],"[didMyChatListMount, get_chat_list, get_isread, ischange, setDidMyChatListMount]",[4153,4165],"[isRead, ischange, myChatList, setIsRead, setMyChatList, tempIsread]"]